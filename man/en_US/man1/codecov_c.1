.\" .\" *********************************************************************
.\" .\" *                                                                   *
.\" .\" *             Copyright 2005\-2012, Intel Corporation                *
.\" .\" *                                                                   *
.\" .\" *                       All Rights Reserved.                        *
.\" .\" *                                                                   *
.\" .\" *********************************************************************
.TH codecov 1 "Intel Corporation" "Copyright(C) 2005\-2012" "Code Coverage Tool"
./"
./"===============================================================
.SH NAME
codecov \- Invokes the code coverage tool.
./"===============================================================
.SH SYNOPSIS
.PP
\fBcodecov\fR [\fIoptions\fR]
.PP
where:
.IP \(bu 2
\fIoptions\fR represents zero or more tool options (listed below).
./"===============================================================
.SH DESCRIPTION
.PP
The code coverage tool provides the ability to determine how much application code is executed when a specific workload is applied to the application. You must prepare the application code using specific options before you can use the code coverage tool. The code coverage tool is available on IA\-32 and Intel(R) 64 on Linux* OS and Mac OS* X. 
.PP
.B Note:
The complete process of preparing the application for code coverage tool use is documented in the Key Features section of the Intel(R) Compiler Documentation.
.PP
The major features of the code coverage tool are:
.IP \(bu 2
Visually presenting code coverage information for an application with a customizable code coverage coloring scheme.
.IP \(bu 2
Displaying dynamic execution counts of each basic block of the application.
.IP \(bu 2
Providing differential coverage, or comparison, profile data for two runs of an application.
.PP
The tool analyzes static profile information generated by the compiler, as well as dynamic profile information generated by running an instrumented form of the application binaries on the workload. The tool can generate a report in HTML\-format and export data in both text\- and XML\-formatted files. The reports can be further customized to show color\-coded, annotated source\-code listings that distinguish between used and unused code. 
./"===============================================================
.SH OPTIONS
.TP
\-bcolor <color>
Sets the HTML color name or code of the uncovered blocks. By default, uncovered blocks are colored yellow (#ffff99).
.TP
\-beginblkdsbl <string>
Specifies the C\-styled comment that marks the beginning of the code fragment to be ignored by the coverage tool. Multiple such options may be specified.
.TP
\-ccolor <color>
Sets the HTML color name or code of the covered code. By default, covered code is colored white (#ffffff).
.TP
\-comp <file>
Sets the name of the file that contains the list of files being covered. There is no default component filename.
.TP
\-counts
Generates dynamic execution counts. Execution counts are not generated by default.
.TP
\-demang
Demangles both argument types of C++ functions and their names. C++ function arguments are not demangled by default on Windows*.
.TP
\-dpi <file>
Sets the pathname of the dynamic profile information file (.dpi). Default is pgopti.dpi.
.TP
\-endblkdsbl <string>
Specifies the C\-styled comment that marks the end of the code fragment to be ignored by the coverage tool. Multiple such options may be specified.
.TP
\-fcolor <color>
Sets the HTML color name or code of the uncovered functions. By default, uncovered functions are colored hot pink (#ffcccc).
.TP
\-help, \-h
Prints all the options of the code coverage tool.
.TP
\-icolor <color>
Sets the HTML color name or code of the information lines such as basic\-block
markers and dynamic counts (#ffffff).
.TP
\-maddr <address>
Sets the email address of the web\-page owner. Default email address of the web\-page owner is nobody.
.TP
\-mname <name>
Sets the name of the web\-page owner. For two\-word names (e.g., Your Name), enter Your_Name. Default web\-page owner name is Nobody.
.TP
\-nopartial
Treats partially covered code as fully covered code. By default, they are not treated the same.
.TP
\-nopmeter
Turns off the progress meter. The meter is on by default.
.TP
\-onelinedsbl <string>
Specifies the C\-styled comment that marks individual lines of code or the whole functions to be ignored by the coverage tool. Multiple such options may be specified.
.TP
\-pcolor <color>
Sets the HTML color name or code of the partially covered code. By default, partially covered code is colored light brown (#fafad2).
.TP
\-prj <name>
Sets the project name. There is no default project name.
.TP
\-ref <ref_dpi_file>
Finds the differential coverage with respect to ref_dpi_file. Differential coverage is not computed by default.
.TP
\-spi <file>
Sets the pathname of the static profile information file (.spi). Default is pgopti.spi.
.TP
\-txtbcvrg <file>
Exports block coverage for covered functions in text format. The file parameter must be a valid filename.
.TP
\-txtbcvrgfull <file>
Exports block coverage for the entire application in text and HTML formats. The file parameter must be a valid filename. 
.TP
\-txtdcg <filename>
Generates the dynamic call\-graph information in text format. The file parameter must be a valid filename.
.TP
\-txtfcvrg <file>
Exports function coverage for the covered function in text format. The file parameter must be a valid filename. 
.TP
\-ucolor <color>
Sets the HTML color name or code of the unknown code. By default, unknown code is colored white (#ffffff).
.TP
\-xcolor <string>
Sets the HTML color name or code of the not feasible code. By default, not feasible code is colored light green (#90ee90). Option has effect only if markers for not feasible code are specified.
.TP
\-xmlbcvrg <file>
Exports block coverage for the covered function in XML format.
.TP
\-xmlbcvrgfull <file>
Exports function coverage for the entire application in HTML and XML formats. The file parameter must be a valid filename.
.TP
\-xmlfcvrg <file>
Exports function coverage for the covered function in XML format. The file parameter must be a valid filename. 
./"===============================================================
.SH EXAMPLES
.RS
.IP 1) 4n
codecov 
.IP
Runs the code coverage tool using all the default settings. Only an HTML file will be generated.
.IP 2) 4n
codecov \-xmlbcvrg blockcov.xml \-beginblkdsbl \[dq]Begin\[dq] \-endblkdsbl \[dq]End\[dq]
.IP
Creates an XML block\-coverage report. The report will not contain corresponding coverage information.
.IP 3) 4n
codecov \-xmlbcvrgfull blockcov.xml \-beginblkdsbl \[dq]Begin\[dq] \-endblkdsbl \[dq]End\[dq] \-ccolor green \-bcolor red \-xcolor lightgreen
.IP
Creates an XML full block\-coverage report and an HTML file with customized colors. Corresponding coverage information will not appear in the report, but it will be marked in the HTML file.
.RE
./"===============================================================
.SH INSTRUCTIONS ON USING THE CODE COVERAGE TOOL
To run the tool:
.RS
.IP 1) 4n
Create the instrumented binary and corresponding static profile information file (.spi) by compiling with \-prof\-genx.
.IP 2) 4n
Run the instrumented application. The dynamic profile information file (.dyn) will be created automatically.
.IP 3) 4n
Merge the dynamic profile information into one file (.dpi) by using the profmerge tool.
.IP 4) 4n
Run the code coverage tool using the options and syntax listed (above).
.RE
./"===============================================================
.SH SEE ALSO
.PP
Refer to the \fIUsing Profile\-guided Optimization (PGO)\fR section of \fIKey Features\fR in the \fBIntel(R) Compiler Documentation\fR for detailed information about using this tool.
./"===============================================================
.SH COPYRIGHT INFORMATION
.PP
INFORMATION IN THIS DOCUMENT IS PROVIDED IN CONNECTION WITH INTEL(R) PRODUCTS.
NO LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO ANY INTELLECTUAL
PROPERTY RIGHTS IS GRANTED BY THIS DOCUMENT. EXCEPT AS PROVIDED IN INTEL\[aq]S TERMS
AND CONDITIONS OF SALE FOR SUCH PRODUCTS, INTEL ASSUMES NO LIABILITY WHATSOEVER,
AND INTEL DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTY, RELATING TO SALE AND/OR USE
OF INTEL PRODUCTS INCLUDING LIABILITY OR WARRANTIES RELATING TO FITNESS FOR A
PARTICULAR PURPOSE, MERCHANTABILITY, OR INFRINGEMENT OF ANY PATENT, COPYRIGHT OR
OTHER INTELLECTUAL PROPERTY RIGHT. UNLESS OTHERWISE AGREED IN WRITING BY INTEL,
THE INTEL PRODUCTS ARE NOT DESIGNED NOR INTENDED FOR ANY APPLICATION IN WHICH THE
FAILURE OF THE INTEL PRODUCT COULD CREATE A SITUATION WHERE PERSONAL INJURY OR
DEATH MAY OCCUR.
.PP
Intel may make changes to specifications and product descriptions at any time,
without notice. Designers must not rely on the absence or characteristics of any
features or instructions marked "reserved" or "undefined." Intel reserves these for
future definition and shall have no responsibility whatsoever for conflicts or
incompatibilities arising from future changes to them. The information here is
subject to change without notice. Do not finalize a design with this information.
.PP
The products described in this document may contain design defects or errors known
as errata which may cause the product to deviate from published specifications.
Current characterized errata are available on request.
.PP
Contact your local Intel sales office or your distributor to obtain the latest
specifications and before placing your product order.
.PP
Copies of documents which have an order number and are referenced in this document,
or other Intel literature, may be obtained by calling 1\-800\-548\-4725, or by visiting
Intel\[aq]s Web Site.
.PP
Intel processor numbers are not a measure of performance. Processor numbers
differentiate features within each processor family, not across different processor
families. See http://www.intel.com/products/processor_number for details.
.PP
BunnyPeople, Celeron, Celeron Inside, Centrino, Centrino logo, Core Inside, FlashFile,
i960, InstantIP, Intel, Intel logo, Intel386, Intel486, Intel740, IntelDX2, IntelDX4,
IntelSX2, Intel Core, Intel Inside, Intel Inside logo, Intel. Leap ahead., Intel. Leap
ahead. logo, Intel NetBurst, Intel NetMerge, Intel NetStructure, Intel SingleDriver,
Intel SpeedStep, Intel StrataFlash, Intel Viiv, Intel vPro, Intel XScale, IPLink,
Itanium, Itanium Inside, MCS, MMX, Oplus, OverDrive, PDCharm, Pentium, Pentium Inside,
skoool, Sound Mark, The Journey Inside, VTune, Xeon, and Xeon Inside are trademarks of
Intel Corporation in the U.S. and other countries.
.PP
* Other names and brands may be claimed as the property of others.
.PP
Copyright (C) 2005\-2012, Intel Corporation. All rights reserved.