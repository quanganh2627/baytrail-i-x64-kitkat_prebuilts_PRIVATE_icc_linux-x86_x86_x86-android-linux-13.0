<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="OptionRef">
<meta name="DC.Title" content="_mm512_loadunpacklo_epi64/ _mm512_mask_loadunpacklo_epi64">
<meta name="abstract" content="Loads low 64-byte aligned portion of unaligned doubleword stream, unpacks mask-enabled elements that fall in that portion, and stores those elements in int64 vector. Corresponding instruction is VLOADUNPACKLD. This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).">
<meta name="description" content="Loads low 64-byte aligned portion of unaligned doubleword stream, unpacks mask-enabled elements that fall in that portion, and stores those elements in int64 vector. Corresponding instruction is VLOADUNPACKLD. This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).">
<meta name="DC.subject" content="_mm512_loadunpacklo_epi64, _mm512_mask_loadunpacklo_epi64">
<meta name="keywords" content="_mm512_loadunpacklo_epi64, _mm512_mask_loadunpacklo_epi64">
<meta name="DC.Relation" scheme="URI" content="GUID-B09001A9-F8CD-464F-A05F-C1D1C7CC2FC5.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-59EA199D-7C7B-447F-A0CE-2AA41AA168B1">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>_mm512_loadunpacklo_epi64</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="intel.cpp.intref_mic_mm512_loadunpacklo_epi64"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-59EA199D-7C7B-447F-A0CE-2AA41AA168B1">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
<h1 class="topictitle1">_mm512_loadunpacklo_epi64/ _mm512_mask_loadunpacklo_epi64</h1>


<!--Loads low  64-byte aligned portion of unaligned doubleword stream, unpacks mask-enabled elements that fall in that portion, and stores those elements in int64 vector. Corresponding instruction is 
 VLOADUNPACKLD .  This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).-->



<div><p>Loads low  64-byte aligned portion of unaligned doubleword stream, unpacks mask-enabled elements that fall in that portion, and stores those elements in int64 vector. Corresponding instruction is 
<samp class="codeph">VLOADUNPACKLD</samp>. <span>This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).</span></p>

<div class="section" id="GUID-DB07A14A-1670-490D-9177-6DF872C1BAD6"><h2>Syntax</h2>

<table cellspacing="0" cellpadding="1" border="0" width="85%" class="syntaxdiagramtbl" style="border-spacing:0; border-collapse:collapse"><tr><td valign="top" class="noborder" width="100%"><p style="margin-top:10pt"><b>Without Mask</b></p><p><span class="kwd">extern __m512i __cdecl _mm512_extloadunpacklo_epi64(__m512i v1_old, void const* mt);

</span></p></td></tr></table>
<table cellspacing="0" cellpadding="1" border="0" width="85%" class="syntaxdiagramtbl" style="border-spacing:0; border-collapse:collapse"><tr><td valign="top" class="noborder" width="100%"><p style="margin-top:10pt"><b>With Mask</b></p><p><span class="kwd">extern __m512i __cdecl _mm512_mask_loadunpacklo_epi64(__m512i v1_old, __mmask8 k1, void const* mt);

</span></p></td></tr></table></div>




<div class="section" id="GUID-3933D262-C924-48D7-8871-8492FC105856"><h2>Arguments</h2>
<table cellspacing="0" cellpadding="4" border="0" width="90%" style="border-spacing:0; border-collapse:collapse">


<tr>
<td valign="top" width="30%" class="noborder"><p><var>v1_old</var></p></td>

<td valign="top" class="noborder"><p>source vector that contains initial values for the destination vector</p>
</td>
</tr>

<tr>
<td valign="top" width="30%" class="noborder"><p><var>k1</var></p></td>

<td valign="top" class="noborder"><p>writemask</p>
</td>
</tr>

<tr>
<td valign="top" width="30%" class="noborder"><p><var>mt  </var></p></td>

<td valign="top" class="noborder"><p>memory address from  where loading occurs</p>
</td>
</tr>

</table>
</div>



<div class="section" id="GUID-42E841DB-CD1E-46F3-9826-1EA1745AFD1E"><h2>Description</h2>
<p> The low 64-byte-aligned portion of the
doubleword stream starting at the element-aligned address
<samp class="codeph">mt</samp>
is loaded and expanded into the writemask-enabled elements of
resulting doubleword vector, for which the initial values are
copied from <samp class="codeph">v1_old</samp> vector. The number of set bits in the writemask
determines the length of the doubleword stream, as each doubleword
is mapped to exactly one of the doubleword elements in the
resulting vector, skipping over writemasked elements of the
resulting vector.</p>

<p> This function only transfers those doublewords
(if any) in the stream that occur at or after the first
64-byte-aligned address following <samp class="codeph">mt</samp> (that is, in the low cache
line of the memory stream for the current implementation). Elements
in the resulting vector that do not map to those stream doublewords
are left unchanged (taken from <samp class="codeph">v1_old</samp>). The
_mm512_loadunpackhi_epi64 function is used to load the part of the
stream at or after the first 64-byte-aligned address preceding
<samp class="codeph">mt</samp>.</p>

<p> In conjunction with <samp class="codeph">_mm512_loadunpackhi_epi64</samp>,
this function is useful for re-expanding data that was packed into
a queue. Also in conjunction with <samp class="codeph">_mm512_loadunpackhi_epi64</samp>, it
allows unaligned vector loads (that is, vector loads that are only
element-wise, not vector-wise, aligned). The typical intrinsic
sequence to perform an unaligned vector load would be:</p>

<pre>v1 = _mm512_loadunpacklo_epi64(v1, mt);
v1 = _mm512_loadunpackhi_epi64(v1, mt+64);</pre>
</div>

<div class="section" id="GUID-C8E37C87-912A-4C8A-8B81-8BD44A4B02B5"><h2>Returns</h2><p>Returns the result of the load operation.</p>
</div>


</div>


<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-B09001A9-F8CD-464F-A05F-C1D1C7CC2FC5.htm">Load Intrinsics</a></div>
</div>
<div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div>

</body>
</html>
