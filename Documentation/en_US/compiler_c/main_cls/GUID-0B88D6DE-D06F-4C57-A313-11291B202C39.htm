<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Intel-Supported Pragmas">
<meta name="DC.subject" content="Pragmas, Intel-supported">
<meta name="keywords" content="Pragmas, Intel-supported">
<meta name="DC.Relation" scheme="URI" content="GUID-DD32852C-A0F9-4AC6-BF67-D10D064CC87A.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-346BAAA5-CF2D-4A26-9194-CA840BFB34E5.htm#GUID-346BAAA5-CF2D-4A26-9194-CA840BFB34E5">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-0B88D6DE-D06F-4C57-A313-11291B202C39">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Intel-Supported Pragmas</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="cppref_pragma_nonintel"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-0B88D6DE-D06F-4C57-A313-11291B202C39">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Intel-Supported Pragmas </h1>
 
   
  <div> 
    <p>The Intel&reg; C++ Compiler supports the following pragmas: 
    </p>
 
    
<div class="tablenoborder"><table cellpadding="4" summary="" id="GUID-E7723F04-CEC5-40C2-AFBD-988BBD54D2C2" frame="border" border="1" cellspacing="0" rules="all"> 
         
         
        <thead align="left"> 
          <tr> 
            <th class="cellrowborder" align="left" valign="top" width="30%" id="d32669e52"> 
              <p>Pragma 
              </p>
 
            </th>
 
            <th class="cellrowborder" align="left" valign="top" width="70%" id="d32669e58"> 
              <p>Description 
              </p>
 
            </th>
 
          </tr>
 
        </thead>
 
        <tbody> 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">alloc_text</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>names the code section where the specified function definitions are to reside 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">auto_inline</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>excludes any function defined within the range where 
                <span class="keyword">off</span> is specified from being considered as candidates for automatic inline expansion 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">bss_seg</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>indicates to the compiler the segment where uninitialized variables are stored in the 
                <span class="keyword">.obj</span> file 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">check_stack</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p><span class="keyword">on</span> argument indicates that stack checking should be enabled for functions that follow and 
                <span class="keyword">off</span> argument indicates that stack checking should be disabled for functions that follow. 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">code_seg</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies a code section where functions are to be allocated 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">comment</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>places a comment record into an object file or executable file 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">component</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>controls collecting of browse information or dependency information from within source files 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">conform</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies the run-time behavior of the 
              <span class="option">/Zc:forScope</span> compiler option 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">const_seg</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies the segment where functions are stored in the 
                <span class="filepath">.obj</span> file 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">data_seg</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies the default section for initialized data 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">deprecated</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>indicates that a function, type, or any other identifier may not be supported in a future release or indicates that a function, type, or any other identifier should not be used any more 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">poison</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>labels the identifiers you want removed from your program; an error results when compiling a 
                <samp class="codeph">"poisoned" identifier; #pragma</samp> 
                <span class="keyword">POISON</span> is also supported. 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">float_control</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies floating-point behavior for a function 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">fp_contract 
                </span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>allows or disallows the implementation to contract expressions 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">include_directory</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>appends the string argument to the list of places to search for #include files; HP compatible pragma 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">init_seg</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies the section to contain C++ initialization code for the translation unit 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">message</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>displays the specified string literal to the standard output device 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">optimize</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies optimizations to be performed on functions below the pragma or till next optimize pragma; implemented to partly support Microsoft's implementation of same pragma; 
                <a href="GUID-178200E0-CD58-48B6-9863-25FD01A60A25.htm#GUID-178200E0-CD58-48B6-9863-25FD01A60A25">click here</a> for Intel's implementation 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">options</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>GCC-compatible (MacOS) pragma; sets the alignment of fields in structures 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">pointers_to_members</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies whether a pointer to a class member can be declared before its associated class definition and is used to control the pointer size and the code required to interpret the pointer 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">pop_macro</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>sets the value of the macro_name macro to the value on the top of the stack for this macro 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">push_macro</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>saves the value of the macro_name macro on the top of the stack for this macro 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">region/endregion</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>specifies a code segment in the Microsoft Visual Studio* 2005 Code Editor that expands and contracts by using the outlining feature 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">section</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>creates a section in an 
                <span class="keyword">.obj</span> file. Once a section is defined, it remains valid for the remainder of the compilation 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">start_map_region</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>used in conjunction with the 
                <span class="keyword">stop_map_region</span> pragma 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">stop_map_region</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>used in conjunction with the 
                <span class="keyword">start_map_region</span> pragma 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">fenv_access</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>informs an implementation that a program may test status flags or run under a non-default control mode 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">vtordisp</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p><span class="keyword">on</span> argument enables the generation of hidden vtordisp members and 
                <span class="keyword">off</span> disables them 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">warning</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>allows selective modification of the behavior of compiler warning messages 
              </p>
 
            </td>
 
          </tr>
 
          <tr> 
            <td class="cellrowborder" valign="top" width="30%" headers="d32669e52 "> 
              <p><span class="keyword">weak</span> 
              </p>
 
            </td>
 
            <td class="cellrowborder" valign="top" width="70%" headers="d32669e58 "> 
              <p>declares symbol you enter to be weak 
              </p>
 
            </td>
 
          </tr>
 
        </tbody>
 
      </table>
</div>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-DD32852C-A0F9-4AC6-BF67-D10D064CC87A.htm">Pragmas</a></div>
</div>
<div class="See Also"><h2>See Also</h2>
<div class="linklist">
<div><a href="GUID-346BAAA5-CF2D-4A26-9194-CA840BFB34E5.htm#GUID-346BAAA5-CF2D-4A26-9194-CA840BFB34E5">Intel-specific Pragmas 
        </a></div></div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
