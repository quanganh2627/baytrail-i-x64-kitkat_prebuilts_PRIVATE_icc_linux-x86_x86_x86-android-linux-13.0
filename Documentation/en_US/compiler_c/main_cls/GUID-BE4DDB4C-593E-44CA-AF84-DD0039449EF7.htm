<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="OptionRef">
<meta name="DC.Title" content="_mm512_fnmadd_ps/ _mm512_fnmadd_round_ps/ _mm512_mask_fnmadd_ps/ _mm512_mask3_fnmadd_ps/ _mm512_mask_fnmadd_round_ps/ _mm512_mask3_fnmadd_round_ps">
<meta name="abstract" content="Multiply, add, and negate float32 vectors. This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).">
<meta name="description" content="Multiply, add, and negate float32 vectors. This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).">
<meta name="DC.subject" content="_mm512_fnmadd_ps, _mm512_fnmadd_round_ps, _mm512_mask_fnmadd_ps, _mm512_mask3_fnmadd_ps, _mm512_mask_fnmadd_round_ps, _mm512_mask3_fnmadd_round_ps">
<meta name="keywords" content="_mm512_fnmadd_ps, _mm512_fnmadd_round_ps, _mm512_mask_fnmadd_ps, _mm512_mask3_fnmadd_ps, _mm512_mask_fnmadd_round_ps, _mm512_mask3_fnmadd_round_ps">
<meta name="DC.Relation" scheme="URI" content="GUID-099AB961-BE89-43A5-9487-E56DA2A1A4CA.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-BE4DDB4C-593E-44CA-AF84-DD0039449EF7">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>_mm512_fnmadd_ps/ _mm512_fnmadd_round_ps/ _mm512_mask_fnmadd_ps/ _mm512_mask3_fnmadd_ps/ _mm512_mask_fnmadd_round_ps/ _mm512_mask3_fnmadd_round_ps</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="intref_mic_mm512_fnmadd_ps"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-BE4DDB4C-593E-44CA-AF84-DD0039449EF7">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
<h1 class="topictitle1">_mm512_fnmadd_ps/ _mm512_fnmadd_round_ps/ _mm512_mask_fnmadd_ps/ _mm512_mask3_fnmadd_ps/ _mm512_mask_fnmadd_round_ps/ _mm512_mask3_fnmadd_round_ps</h1>
<!--Multiply, add, and negate float32 vectors.  This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).--><div><p>Multiply, add, and negate float32 vectors. <span>This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).</span></p>

<div class="section" id="GUID-7E1E7B98-7A0F-4F0E-AA8A-5F305100B34C"><h2>Syntax</h2><table cellspacing="0" cellpadding="1" border="0" width="85%" class="syntaxdiagramtbl" style="border-spacing:0; border-collapse:collapse"><tr><td valign="top" class="noborder" width="100%"><p style="margin-top:10pt"><b>Without Mask</b></p><p><span class="kwd">extern __m512 __cdecl _mm512_fnmadd_ps(__m512 v1, __m512 v2, __m512 v3);</span></p><p><span class="kwd">extern __m512 __cdecl _mm512_fnmadd_round_ps(__m512 v1, __m512 v2, __m512 v3, int rc);</span></p></td></tr></table><table cellspacing="0" cellpadding="1" border="0" width="85%" class="syntaxdiagramtbl" style="border-spacing:0; border-collapse:collapse"><tr><td valign="top" class="noborder" width="100%"><p style="margin-top:10pt"><b>With Mask</b></p><p><span class="kwd">extern __m512 __cdecl _mm512_mask_fnmadd_ps(__m512 v1, __mmask16 k1, __m512 v2, __m512 v3);</span></p><p><span class="kwd">extern __m512 __cdecl _mm512_mask_fnmadd_round_ps(__m512 v1, __mmask16 k1, __m512 v2, __m512 v3, int rc);</span></p><p><span class="kwd">extern __m512 __cdecl _mm512_mask3_fnmadd_ps(__m512 v1, __m512 v2, __m512 v3, __mmask16 k1);</span></p><p><span class="kwd">extern __m512 __cdecl _mm512_mask3_fnmadd_round_ps(__m512 v1, __m512 v2, __m512 v3, __mmask16 k1, int rc);</span></p></td></tr></table></div>
<div class="section" id="GUID-7F5611CC-852A-4457-84B9-C2F6CC8EBB38"><h2>Parameters</h2><table cellspacing="0" cellpadding="4" border="0" width="90%" style="border-spacing:0; border-collapse:collapse">
<tr>
<td valign="top" width="30%" class="noborder"><p><var>v1</var></p></td>

<td valign="top" class="noborder">float32 vector used for multiplying by float32 vector <samp class="codeph">v2</samp>. 
<p>Notice that the syntax is 
      <samp class="codeph">v1</samp>, not 
      <samp class="codeph">v1_old</samp>. 
    </p>
</td>
</tr>
<tr>
<td valign="top" width="30%" class="noborder"><p><var>v2</var></p></td>

<td valign="top" class="noborder">float32 vector multiplied by float32 vector 
<samp class="codeph">v1</samp>. </td>
</tr>
<tr>
<td valign="top" width="30%" class="noborder"><p><var>v3</var></p></td>

<td valign="top" class="noborder">float32  vector subtracted from the product of <samp class="codeph">v1</samp> and <samp class="codeph">v2</samp>. </td>
</tr>
<tr>
<td valign="top" width="30%" class="noborder"><p><var>k1</var></p></td>

<td valign="top" class="noborder"><span>Writemask; only those elements of the source vectors with corresponding bit set to '<span>1</span>' in the 
        <samp class="codeph">k1</samp> mask are computed and stored in the result; elements in the result vector corresponding to zero bit in 
        <samp class="codeph">k1</samp> are copied from corresponding elements of vector 
        <samp class="codeph">v1_old</samp> 
      </span></td>
</tr>
<tr>
<td valign="top" width="30%" class="noborder"><p><var>rc</var></p></td>

<td valign="top" class="noborder"><p>Rounding control values; these can be one of the following: 
    <a name="d89e49"><!-- --></a><ul type="disc" id="d89e49"> 
      <li><samp class="codeph">_MM_FROUND_TO_NEAREST_INT</samp> - rounds to nearest even 
      </li>
 
      <li><samp class="codeph">_MM_FROUND_TO_NEG_INF</samp> - rounds to negative infinity 
      </li>
 
      <li><samp class="codeph">_MM_FROUND_TO_POS_INF</samp> - rounds to positive infinity 
      </li>
 
      <li><samp class="codeph">_MM_FROUND_TO_ZERO</samp> - rounds to zero 
      </li>
 
      <li><samp class="codeph">_MM_FROUND_CUR_DIRECTION</samp> - rounds using default from MXCSR register 
      </li>
 
    </ul>
 
    </p>
</td>
</tr>

</table>





</div>
<div class="section" id="GUID-D999BBE0-4B5C-4896-9054-F42B319877C6"><h2>Description</h2>
<p>Performs an element-by-element multiplication between float32 vector <samp class="codeph">v1</samp> and the float32 vector <samp class="codeph">v2</samp>, then subtracts the result from float32 vector <samp class="codeph">v3</samp>. Intermediate values are calculated to infinite precision, and are not truncated or rounded, unless you specify the <var>rc</var> parameter.
</p>
<p>The masked variant has one additional argument: <samp class="codeph">k1</samp>. Only those elements in source registers with the corresponding bit set in vector mask <samp class="codeph">k1</samp> are used for computing. When a write mask is used, the pass-through values come from the vector parameter immediately preceding the mask parameter. For example, for <samp class="codeph">_mm512_mask_fnmadd_ps(v1, k1, v2, v3)</samp> the pass-through values come from <samp class="codeph">v1</samp>, while for <samp class="codeph">_mm512_mask3_fnmadd_ps(v1, v2, v3, k3)</samp> the pass-through values come from <samp class="codeph">v3</samp>. To get the pass-through values from <samp class="codeph">v2</samp>, reverse the order of <samp class="codeph">v1</samp> and <samp class="codeph">v2</samp> in the <samp class="codeph">_mask_</samp> form.
</p>
</div>
<div class="section" id="GUID-D6EAFDB8-9A27-48D2-AE43-B7947CD27E9C"><h2>Returns</h2><p>Returns the result of the multiplication-addition operation.</p>
</div>
</div>

<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-099AB961-BE89-43A5-9487-E56DA2A1A4CA.htm">Multiplication Operations</a></div>
</div>
<div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div>
</body>
</html>
