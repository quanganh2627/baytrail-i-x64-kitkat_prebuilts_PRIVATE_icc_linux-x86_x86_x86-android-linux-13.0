<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Overview: Intrinsics for Intel&reg; Advanced Vector Extensions Instructions">
<meta name="DC.subject" content="intrinsics, Intel&reg; AVX, overview, Advanced Vector Extensions, AVX">
<meta name="keywords" content="intrinsics, Intel&reg; AVX, overview, Advanced Vector Extensions, AVX">
<meta name="DC.Relation" scheme="URI" content="GUID-64E5BFBB-FE9E-47CB-82A7-76C2AD57ED9C.htm">
<meta name="DC.Relation" scheme="URI" content="http://software.intel.com/en-us/avx/">
<meta name="DC.Relation" scheme="URI" content="GUID-A9C3B12F-7A9A-4C8D-A6CD-9974ABC570E9.htm#GUID-A9C3B12F-7A9A-4C8D-A6CD-9974ABC570E9">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-2FDA8EE9-315C-4CA4-92B4-40036A898B45">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Overview: Intrinsics for Intel&reg; Advanced Vector Extensions Instructions</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="intel.cpp.intref_avx_overview"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-2FDA8EE9-315C-4CA4-92B4-40036A898B45">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Overview: Intrinsics for Intel&reg; Advanced Vector Extensions Instructions</h1>
 
   
  <div> 
    <p>The Intel&reg; Advanced Vector Extensions (Intel&reg; AVX) intrinsics are assembly-coded functions that call on Intel&reg; AVX instructions, which are new vector SIMD instruction extensions for the IA-32 and Intel&reg; 64 architectures. The Intel&reg; Advanced Vector Extensions are architecturally similar to the Intel&reg; Streaming SIMD Extensions (Intel&reg; SSE) and double-precision floating-point portions of Intel&reg; SSE2. 
    </p>
 
    <p>The prototypes for the Intel&reg; AVX intrinsics are available in the 
      <span class="filepath">immintrin.h 
      </span>file. 
    </p>
 
    <p>The Intel&reg; AVX intrinsics are supported on the IA-32 and Intel&reg; 64 architectures built from 32nm process technology. They map directly to the Intel&reg; AVX new instructions and other enhanced 128-bit SIMD instructions. 
    </p>
 
    <p>The Intel&reg; Advanced Vector Extensions (Intel&reg; AVX) introduces 256-bit vector processing capability and includes components on the Intel processor generations built from 32nm process and beyond: 
    </p>
 
    <p>The first generation Intel&reg; AVX provides 256-bit SIMD register support, 256-bit vector floating-point instructions, enhancements to 128-bit SIMD instructions, and support for three and four operand syntax. 
    </p>
 
    <div class="section" id="GUID-11D4F270-B435-46F2-86A8-8FCC319A4BA8"><h2 class="sectiontitle">Functional Overview</h2> 
       
      <p>Intel&reg; AVX provide comprehensive functional improvements over previous generations of SIMD instruction extensions. The functional improvements include: 
      </p>
 
      <ul type="disc" id="GUID-DDD6D026-E6EA-4AC3-9369-015AB83146D3"> 
        <li>256-bit floating-point arithmetic primitives: Intel&reg; AVX enhances existing 128-bit floating-point arithmetic instructions with 256-bit capabilities for floating-point processing. 
        </li>
 
        <li>Enhancements for flexible SIMD data movements: Intel&reg; AVX provides a number of new data movement primitives to enable efficient SIMD programming in relation to loading non-unit-strided data into SIMD registers, intra-register SIMD data manipulation, conditional expression and branch handling, etc. Enhancements for SIMD data movement primitives cover 256-bit and 128-bit vector floating-point data, and across 128-bit integer SIMD data processing using VEX-encoded instructions. 
        </li>
 
      </ul>
 
    </div>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-64E5BFBB-FE9E-47CB-82A7-76C2AD57ED9C.htm">Intrinsics for Intel&reg; Advanced Vector Extensions</a></div>
</div>
<div class="See Also"><h2>See Also</h2>
<div class="linklist">
<div><a href="http://software.intel.com/en-us/avx/" target="_blank">Intel&reg; AVX site at http://software.intel.com/en-us/avx/ 
        </a></div>
<div><a href="GUID-A9C3B12F-7A9A-4C8D-A6CD-9974ABC570E9.htm#GUID-A9C3B12F-7A9A-4C8D-A6CD-9974ABC570E9">Details about the Intel&reg; AVX Intrinsics 
        </a></div></div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
