<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Intrinsics for Bitwise Operations">
<meta name="DC.subject" content="intrinsics, Intel&reg; AVX, bitwise logical operations, Advanced Vector Extensions, AVX">
<meta name="keywords" content="intrinsics, Intel&reg; AVX, bitwise logical operations, Advanced Vector Extensions, AVX">
<meta name="DC.Relation" scheme="URI" content="GUID-64E5BFBB-FE9E-47CB-82A7-76C2AD57ED9C.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-28080273-3912-4E73-8278-70E288628740.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-B8CE7628-D487-4642-9912-E8DB39E9B863.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-1267FED6-87AE-4131-910E-F21709DF4947.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-4FD1EE08-18DF-4020-AB4F-FD8C8A0E3F7F.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-352899CC-8B42-4E12-9F70-273B743DAB0A.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-E2F696F5-9F00-43CD-89B6-7CB4A7C0DD21.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-34046641-DC05-4AE0-B7EC-D369E817D24E.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-EDB208B7-724F-4F8C-94C4-37AC5F858144.htm">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-576E6431-B3D3-4BB9-B98D-D78B003576B4">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Intrinsics for Bitwise Operations</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="intel.cpp.intref_bk_bitwiseops"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-576E6431-B3D3-4BB9-B98D-D78B003576B4">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Intrinsics for Bitwise Operations</h1>
 
   
  <div> 
    <p></p>
 
  </div>
 

<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-64E5BFBB-FE9E-47CB-82A7-76C2AD57ED9C.htm">Intrinsics for Intel&reg; Advanced Vector Extensions</a></div>
</div>
<div>
<ul class="ullinks">
<li class="ulchildlink"><a href="GUID-28080273-3912-4E73-8278-70E288628740.htm">_mm256_and_pd</a><br>
 Performs bitwise logical AND operation on float64 vectors. The corresponding Intel&reg; AVX instruction is <span class="keyword">VANDPD</span>.</li>
<li class="ulchildlink"><a href="GUID-B8CE7628-D487-4642-9912-E8DB39E9B863.htm">_mm256_and_ps</a><br>
Performs bitwise logical AND operation on float32 vectors. The corresponding Intel&reg; AVX instruction is <span class="keyword">VANDPS</span>.</li>
<li class="ulchildlink"><a href="GUID-1267FED6-87AE-4131-910E-F21709DF4947.htm">_mm256_andnot_pd</a><br>
Performs bitwise logical AND NOT operation on float64 vectors. The corresponding Intel&reg; AVX instruction is <span class="keyword">VANDNPD</span>.</li>
<li class="ulchildlink"><a href="GUID-4FD1EE08-18DF-4020-AB4F-FD8C8A0E3F7F.htm">_mm256_andnot_ps</a><br>
Performs bitwise logical AND NOT operation on float32 vectors.The corresponding Intel&reg; AVX instruction is <span class="keyword">VANDNPS</span>.</li>
<li class="ulchildlink"><a href="GUID-352899CC-8B42-4E12-9F70-273B743DAB0A.htm">_mm256_or_pd</a><br>
Performs bitwise logical OR operation on float64 vectors. The corresponding Intel&reg; AVX instruction is <span class="keyword">VORPD</span>.</li>
<li class="ulchildlink"><a href="GUID-E2F696F5-9F00-43CD-89B6-7CB4A7C0DD21.htm">_mm256_or_ps</a><br>
Performs bitwise logical OR operation on float32 vectors. The corresponding Intel&reg; AVX instruction is <span class="keyword">VORPS</span>.</li>
<li class="ulchildlink"><a href="GUID-34046641-DC05-4AE0-B7EC-D369E817D24E.htm">_mm256_xor_pd</a><br>
Performs bitwise logical XOR operation on float64 vectors. The corresponding Intel&reg; AVX instruction is <span class="keyword">VXORPD</span>.</li>
<li class="ulchildlink"><a href="GUID-EDB208B7-724F-4F8C-94C4-37AC5F858144.htm">_mm256_xor_ps</a><br>
Performs bitwise logical XOR operation on float32 vectors. The corresponding Intel&reg; AVX instruction is <span class="keyword">VXORPS</span>.</li>
</ul>
</div>

</body>
</html>
