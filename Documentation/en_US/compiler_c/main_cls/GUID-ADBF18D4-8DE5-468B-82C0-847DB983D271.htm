<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="OptionRef">
<meta name="DC.Title" content="_mm512_mul_round_ps/ _mm512_mask_mul_round_ps">
<meta name="abstract" content="Multiplies rounded float32 vectors. The corresponding instruction is VMULPS. This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).">
<meta name="description" content="Multiplies rounded float32 vectors. The corresponding instruction is VMULPS. This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).">
<meta name="DC.subject" content="_mm512_mul_round_ps, _mm512_mask_mul_round_ps">
<meta name="keywords" content="_mm512_mul_round_ps, _mm512_mask_mul_round_ps">
<meta name="DC.Relation" scheme="URI" content="GUID-099AB961-BE89-43A5-9487-E56DA2A1A4CA.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-ADBF18D4-8DE5-468B-82C0-847DB983D271">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>_mm512_mul_round_ps</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="intel.cpp.intref_mic_mm512_mul_round_ps"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-ADBF18D4-8DE5-468B-82C0-847DB983D271">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
<h1 class="topictitle1">_mm512_mul_round_ps/ _mm512_mask_mul_round_ps</h1>
<!--Multiplies rounded float32 vectors. The corresponding instruction is 
 VMULPS .  This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).--><div><p>Multiplies rounded float32 vectors. The corresponding instruction is 
<samp class="codeph">VMULPS</samp>. <span>This intrinsic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).</span></p>

<div class="section" id="GUID-3A9FC7F5-D5EB-4C6E-A239-0D22379DE050"><h2>Syntax</h2><table cellspacing="0" cellpadding="1" border="0" width="85%" class="syntaxdiagramtbl" style="border-spacing:0; border-collapse:collapse"><tr><td valign="top" class="noborder" width="100%"><p style="margin-top:10pt"><b>Without Mask</b></p><p><span class="kwd">extern _m512 __cdecl _mm512_mul_round_ps(_m512 v2, _m512 v3, int rc);
</span></p></td></tr></table><table cellspacing="0" cellpadding="1" border="0" width="85%" class="syntaxdiagramtbl" style="border-spacing:0; border-collapse:collapse"><tr><td valign="top" class="noborder" width="100%"><p style="margin-top:10pt"><b>With Mask</b></p><p><span class="kwd">extern _m512 __cdecl _mm512_mask_mul_round_ps(_m512 v1_old, __mmask16 k1, _m512 v2, _m512 v3, int rc);</span></p></td></tr></table></div>
<div class="section" id="GUID-65F89B9A-B822-4FB0-9FDC-A050326FAEDF"><h2>Parameters</h2><table cellspacing="0" cellpadding="4" border="0" width="90%" style="border-spacing:0; border-collapse:collapse">
<tr>
<td valign="top" width="30%" class="noborder"><p><var>v2</var></p></td>

<td valign="top" class="noborder">float32 vector used for the multiplication operation
</td>
</tr>
<tr>
<td valign="top" width="30%" class="noborder"><p><var>v3</var></p></td>

<td valign="top" class="noborder">float32 vector also used for multiplication operation
</td>
</tr>
<tr>
<td valign="top" width="30%" class="noborder"><p><var>v1_old</var></p></td>

<td valign="top" class="noborder"><span> Source vector that retains old values of the destination vector; the resulting vector gets corresponding elements from 
        <samp class="codeph">v1_old</samp> for zero mask bits</span></td>
</tr>
<tr>
<td valign="top" width="30%" class="noborder"><p><var>k1</var></p></td>

<td valign="top" class="noborder"><span>Writemask; only those elements of the source vectors with corresponding bit set to '<span>1</span>' in the 
        <samp class="codeph">k1</samp> mask are computed and stored in the result; elements in the result vector corresponding to zero bit in 
        <samp class="codeph">k1</samp> are copied from corresponding elements of vector 
        <samp class="codeph">v1_old</samp> 
      </span></td>
</tr>
<tr>
<td valign="top" width="30%" class="noborder"><p><var>rc</var></p></td>

<td valign="top" class="noborder"><p>Rounding control values; these can be one of the following: 
    <a name="d89e49"><!-- --></a><ul type="disc" id="d89e49"> 
      <li><samp class="codeph">_MM_FROUND_TO_NEAREST_INT</samp> - rounds to nearest even 
      </li>
 
      <li><samp class="codeph">_MM_FROUND_TO_NEG_INF</samp> - rounds to negative infinity 
      </li>
 
      <li><samp class="codeph">_MM_FROUND_TO_POS_INF</samp> - rounds to positive infinity 
      </li>
 
      <li><samp class="codeph">_MM_FROUND_TO_ZERO</samp> - rounds to zero 
      </li>
 
      <li><samp class="codeph">_MM_FROUND_CUR_DIRECTION</samp> - rounds using default from MXCSR register 
      </li>
 
    </ul>
 
    </p>
</td>
</tr>

</table>


</div>
<div class="section" id="GUID-4D3F3BC1-CAE0-477D-AD17-4157EE9D66BD"><h2>Description</h2>
<p>Performs an element-by-element multiplication between float32 vector 
<samp class="codeph">v2</samp> and float32 vector 
<samp class="codeph">v3</samp>.  Intermediate values are rounded according to <var>rc</var> value.</p>
<p>The masked variant has two additional arguments: 
<samp class="codeph">v1_old</samp> and 
<samp class="codeph">k1</samp>. Those elements of 
<samp class="codeph">v2</samp> and 
<samp class="codeph">v3</samp> with the corresponding bit clear in vector mask 
<samp class="codeph">k1</samp> are not used in the computation. Instead, the corresponding element from 
<samp class="codeph">v1_old</samp> is copied to the resulting vector.</p>
</div>
<div class="section" id="GUID-F1B26D73-C6F2-48CA-A2A9-84BB43D39418"><h2>Returns</h2><p>Returns the result of the multiplication operation.</p>
</div>
</div>

<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-099AB961-BE89-43A5-9487-E56DA2A1A4CA.htm">Multiplication Operations</a></div>
</div>
<div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div>
</body>
</html>
