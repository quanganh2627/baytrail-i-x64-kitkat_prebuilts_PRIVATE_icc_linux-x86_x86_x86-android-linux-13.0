<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Pointer Checker Feature Summary">
<meta name="DC.subject" content="pointer checker, feature summary">
<meta name="keywords" content="pointer checker, feature summary">
<meta name="DC.Relation" scheme="URI" content="GUID-A0E78B58-DFB6-408A-B065-7908D86E3711.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-7E8868FF-51FD-4BAD-9E97-1CE6B96D50B6.htm#GUID-7E8868FF-51FD-4BAD-9E97-1CE6B96D50B6">
<meta name="DC.Relation" scheme="URI" content="GUID-68B0A2A1-1EF6-48B6-B20B-12356BA72B1B.htm#GUID-68B0A2A1-1EF6-48B6-B20B-12356BA72B1B">
<meta name="DC.Relation" scheme="URI" content="GUID-389D8F46-C207-40B8-8ED3-A0827894C6FF.htm#GUID-389D8F46-C207-40B8-8ED3-A0827894C6FF">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-9937FAF4-5E87-4D24-BECC-A4B3A0C04511">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Pointer Checker Feature Summary</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="Context-id"></MSHelp:Keyword>
<MSHelp:Keyword Index="F" Term="intel.cpp.Context-id"></MSHelp:Keyword>
</xml>
</head>
<body id="GUID-9937FAF4-5E87-4D24-BECC-A4B3A0C04511">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Pointer Checker Feature Summary</h1>
 
   
  <div> 
	 <p>The pointer checker provides a number of related elements, summarized in the following table. 
	 </p>
 
	 
<div class="tablenoborder"><table cellpadding="4" summary="" id="GUID-BF7ACBF2-99E1-4424-B8E1-91285CEABF15" frame="border" border="1" cellspacing="0" rules="all"> 
		   
		   
		  <tbody> 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <strong> Element</strong> 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <strong> Description</strong> 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" colspan="2" valign="top"><strong>Compiler Options:</strong> 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>/Qcheck-pointers:<span class="option">[none | write | rw]</span> (Windows* OS) 
				  </p>
 
				  <p>-check-pointers=<span class="option">[none | write | rw]</span> (Linux* OS) 
				  </p>
 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p> Enables the pointer checker and adds the associated libraries. 
				  </p>
 
				  <p> This compiler option enables checking of all indirect accesses through pointers and accesses to arrays. 
				  </p>
 
				  <p>The pointer checker is off by default. 
				  </p>
 
				  <p> Specify 
				  <span class="option">none</span> to disable the pointer checker. 
				  </p>
 
				  <p> Specify 
				  <span class="option">write</span> to check bounds for writes through pointers only. 
				  </p>
 
				  <p>Specify 
				  <span class="option">rw</span> to check bounds for both reads and writes through pointers. 
				  </p>
 
				  <p> If the compiler determines that an access is safe during optimization, then the compiler removes the pointer checking code. 
				  </p>
 
				  <p>See 
					 <a href="GUID-35036DDA-62B4-402F-8A21-1201C2706BF3.htm#GUID-35036DDA-62B4-402F-8A21-1201C2706BF3">Checking Bounds</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>/Qcheck-pointers-dangling:<span class="option">[none | heap | stack | all]</span> (Windows* OS) 
				  </p>
 
				  <p>-check-pointers-dangling=<span class="option">[none | heap | stack | all]</span> (Linux* OS) 
				  </p>
 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>Enables checking for dangling pointer references. 
				  </p>
 
				  <div class="Note"><h3 class="NoteTipHead">Note</h3> 
					 <p>To use this option, you must also use the /Qcheck-pointers or -check-pointers option. 
					 </p>
 
				  </div> 
				  <p>The default is no checking for dangling pointer references. 
				  </p>
 
				  <p> Specify 
				  <span class="option">none</span> to disable checking for dangling pointer references. 
				  </p>
 
				  <p> Specify 
				  <span class="option">heap</span> to check for dangling pointer references on the heap. 
				  </p>
 
				  <p>Specify 
				  <span class="option">stack</span> to check for dangling pointer references on the stack. 
				  </p>
 
				  <p>Specify 
				  <span class="option">all</span> to check for dangling pointer references on both the heap and the stack. 
				  </p>
 
				  <p>See 
					 <a href="GUID-86D9AB31-92B0-415E-BA71-62E2075B192F.htm#GUID-86D9AB31-92B0-415E-BA71-62E2075B192F">Checking for Dangling Pointers</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>/Qcheck-pointers-undimensioned<span class="option">[-]</span> (Windows* OS) 
				  </p>
 
				  <p>-<span class="option">[no-]</span>check-pointers-undimensioned (Linux* OS) 
				  </p>
 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p> Enables the checking of bounds for arrays without dimensions. 
					 <div class="Note"><h3 class="NoteTipHead">Note</h3> 
						<p>To use this option, you must also use the /Qcheck- pointers or -check-pointers option. 
						</p>
 
					 </div> 
				  </p>
 
				  <p>See 
					 <a href="GUID-C23D8A22-FE0C-4B3C-A053-1987E7209A19.htm#GUID-C23D8A22-FE0C-4B3C-A053-1987E7209A19">Checking Arrays</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" colspan="2" valign="top"><strong>Intrinsics:</strong> 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"><span class="keyword"> void * __chkp_lower_bound(void **)</span> 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>Returns the lower bound associated with the pointer. 
				  </p>
 
				  <p>See 
					 <a href="GUID-9F5E54B9-5C24-4712-9AC8-3230EF70A1EA.htm#GUID-9F5E54B9-5C24-4712-9AC8-3230EF70A1EA">Writing a Wrapper</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"><span class="keyword"> void * __chkp_upper_bound(void **)</span> 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>Returns the upper bound associated with the pointer. 
				  </p>
 
				  <p>See 
					 <a href="GUID-9F5E54B9-5C24-4712-9AC8-3230EF70A1EA.htm#GUID-9F5E54B9-5C24-4712-9AC8-3230EF70A1EA">Writing a Wrapper</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <span class="keyword"> void * __chkp_kill_bounds(void *p)</span> 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p> Removes the bounds information to allow the pointer specified in the argument to access all memory. Use this function for a pointer from a non-enabled module that will be used in an enabled module where you cannot determine the bounds of the pointer. 
				  </p>
 
				  <p>The function ensures that the pointer created from a non-enabled module does not inherit the bounds from another pointer that was in the same memory address. 
				  </p>
 
				  <p>The return value is a pointer without bounds information. 
				  </p>
 
				  <p>See 
					 <a href="GUID-860D8584-7A70-4D57-A267-12E29BB390BF.htm#GUID-860D8584-7A70-4D57-A267-12E29BB390BF">Working with Enabled and Non-Enabled Modules</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p><span class="keyword">void * __chkp_make_bounds(void *p, size_t size)</span> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>Creates new bounds information within the allocated memory address for the pointer in the argument, replacing any previously associated bounds information. 
				  </p>
 
				  <p>The new bounds are: 
					 <pre>p = __chkp_make_bounds(q, size)

// lower_bound(p) = (char *)q
// upper_bound(p) = lower_bound(p) + size</pre> 
				  </p>
 
				  <p>See 
					 <a href="GUID-63851610-3112-4B00-80D5-3B268F7677BB.htm#GUID-63851610-3112-4B00-80D5-3B268F7677BB">Checking Custom Memory Allocators</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" colspan="2" valign="top"><strong>Reporting Function:</strong> 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <span class="keyword">void __chkp_report_control(__chkp_report_option_t option, __chkp_callback_t callback)</span> 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>Determines how errors are reported. 
				  </p>
 
				  <p>See 
					 <a href="GUID-B8D77890-54DC-4FB9-BD1E-6C55CC8F03DF.htm#GUID-B8D77890-54DC-4FB9-BD1E-6C55CC8F03DF">Finding and Reporting Out-of-Bounds Errors</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" colspan="2" valign="top"><strong>Enumeration:</strong> 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p><samp class="codeph">__chkp_report_option_t</samp> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>Controls how out-of-bounds error are reported. This enumeration is declared in the header file 
					 <span class="filepath">chkp.h</span>. 
				  </p>
 
				  <p>See 
					 <a href="GUID-B8D77890-54DC-4FB9-BD1E-6C55CC8F03DF.htm#GUID-B8D77890-54DC-4FB9-BD1E-6C55CC8F03DF">Finding and Reporting Out-of-Bounds Errors</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" colspan="2" valign="top"><strong>Environment Variable:</strong> 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p><span class="filepath">INTEL_CHKP_REPORT_MODE</span> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>Changes the pointer checker reporting mode at runtime. 
				  </p>
 
				  <p>See 
					 <a href="GUID-B8D77890-54DC-4FB9-BD1E-6C55CC8F03DF.htm#GUID-B8D77890-54DC-4FB9-BD1E-6C55CC8F03DF">Finding and Reporting Out-of-Bounds Errors</a>. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" colspan="2" valign="top"><strong>Header file:</strong> 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p><span class="filepath">chkp.h</span> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" valign="top" width="NaN%"> 
				  <p>Defines intrinsic and reporting functions. The header file is located n the 
					 <span class="filepath">&lt;install-dir&gt;\include</span> directory. 
				  </p>
 
				</td>
 
			 </tr>
 
		  </tbody>
 
		</table>
</div>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-A0E78B58-DFB6-408A-B065-7908D86E3711.htm">Pointer Checker</a></div>
</div>
<div class="See Also"><h2>See Also</h2>
<div class="linklist">
<div><a href="GUID-7E8868FF-51FD-4BAD-9E97-1CE6B96D50B6.htm#GUID-7E8868FF-51FD-4BAD-9E97-1CE6B96D50B6">check-pointers, Qcheck-pointers 
		  </a> Determines whether the compiler checks bounds for memory access through pointers.</div>
<div><a href="GUID-68B0A2A1-1EF6-48B6-B20B-12356BA72B1B.htm#GUID-68B0A2A1-1EF6-48B6-B20B-12356BA72B1B">check-pointers-dangling, Qcheck-pointers-dangling 
		  </a>  Determines whether the compiler checks for dangling pointer references.</div>
<div><a href="GUID-389D8F46-C207-40B8-8ED3-A0827894C6FF.htm#GUID-389D8F46-C207-40B8-8ED3-A0827894C6FF">check-pointers-undimensioned, Qcheck-pointers-undimensioned 
		  </a> Determines whether the compiler checks bounds for memory access through arrays that are declared without dimensions.</div></div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
