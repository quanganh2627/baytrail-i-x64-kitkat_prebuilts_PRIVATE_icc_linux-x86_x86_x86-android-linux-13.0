<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Compilation Phases">
<meta name="DC.subject" content="compiler, compilation phases, linking">
<meta name="keywords" content="compiler, compilation phases, linking">
<meta name="DC.Relation" scheme="URI" content="GUID-0A864821-14D8-4C94-8330-EDB1E3A83B40.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-4555A569-67C0-42E7-A0E2-5E5CB05C21B0.htm#GUID-4555A569-67C0-42E7-A0E2-5E5CB05C21B0">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-3F5EC717-AEC2-45C2-BC43-463939FB3118">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Compilation Phases</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="bldaps_application_development_cycle_comm"></MSHelp:Keyword>
<MSHelp:Keyword Index="F" Term="intel.cpp.bldaps_application_development_cycle_comm"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-3F5EC717-AEC2-45C2-BC43-463939FB3118">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Compilation Phases</h1>
 
   
  <div> 
	 <p>The Intel&reg; C++ Compiler processes C and C++ language source files. Compilation can be roughly divided into these major phases: 
	 </p>
 
	 <ul type="disc" id="GUID-86B81C88-D001-46A0-92E5-9605458F7F62"> 
		<li> 
		  <p>preprocessing 
		  </p>
 
		</li>
 
		<li> 
		  <p>semantic parsing 
		  </p>
 
		</li>
 
		<li> 
		  <p> optimization 
		  </p>
 
		</li>
 
		<li> 
		  <p>code generation 
		  </p>
 
		</li>
 
		<li> 
		  <p>linking 
		  </p>
 
		</li>
 
	 </ul>
 
	 <p>The first four phases are performed by the compiler (<samp class="codeph">icl.exe</samp> on Windows* OS; 
		<samp class="codeph">icc</samp> or 
		<samp class="codeph">icpc</samp> on Linux* OS and OS X*). 
	 </p>
 
	 <p>By default, the compiler automatically invokes the linker (<samp class="codeph">xilink.exe</samp> on Windows OS; 
		<samp class="codeph">xild</samp> on Linux OS and OS X) to generate the final executable binary. 
	 </p>
 
	 <p> If you specify 
  <span class="option"> /c</span> (Windows OS) or 
  <span class="option">-c</span> (Linux OS and OS X) at compilation time, the compiler will generate only object files. You will need to explicitly invoke linker in order to generate the executable. 
  </p>
 
  <p>If you specify<samp class="codeph">/E /P</samp> (Windows OS) or 
	 <samp class="codeph">-E -P</samp> (Linux OS and OS X) when calling the compiler, the compiler will generate only the preprocessed file with a 
	 <samp class="codeph">.i</samp> extension. 
  </p>
 
  <p>If you specify 
  <span class="option">/Qipo</span> (Windows OS) or 
  <span class="option">-ipo 
  </span>(Linux OS and OS X) to use multi-file interprocedural optimization (also called Whole Program Optimization), the optimization is done at link time. 
  </p>

  <p>Similarly, when you specify 
  <span class="option">/Qprof-gen</span> (Windows OS) or 
  <span class="option">-prof-gen 
  </span>(Linux OS and OS X) to use Profile Guided Optimization, the optimization is done at link time.
  </p>

  <p>In both cases, the Intel&reg; C++ compiler will generate mock object files that only the compiler's linker (<span class="filepath">xilink.exe</span> and 
	 <span class="filepath">xild</span>) can understand. 
  </p>

  <p>
  </p>

  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-0A864821-14D8-4C94-8330-EDB1E3A83B40.htm">Compilation</a></div>
</div>
<div class="See Also"><h2>See Also</h2>
<div class="linklist">
<div><a href="GUID-4555A569-67C0-42E7-A0E2-5E5CB05C21B0.htm#GUID-4555A569-67C0-42E7-A0E2-5E5CB05C21B0">Linking Tools and Options 
		  </a></div></div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
