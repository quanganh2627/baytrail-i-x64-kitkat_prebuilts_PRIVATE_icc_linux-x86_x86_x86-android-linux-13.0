<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Targeting Processors Manually">
<meta name="DC.subject" content="CPU dispatch, manual processor dispatch, targeting, processors manually, cpuid">
<meta name="keywords" content="CPU dispatch, manual processor dispatch, targeting, processors manually, cpuid">
<meta name="DC.Relation" scheme="URI" content="GUID-B97D1A7C-A8CA-4D3E-9732-0EA33CE1F777.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-3EF0AFA5-1082-4075-B38A-D52589B47EC0">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Targeting Processors Manually</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="optaps_cpu_disp_c"></MSHelp:Keyword>
<MSHelp:Keyword Index="F" Term="intel.cpp.optaps_cpu_disp_c"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-3EF0AFA5-1082-4075-B38A-D52589B47EC0">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Targeting Processors Manually</h1>
 
   
  <div>

	 <p>The manual processor dispatch feature allows you to target processors manually. You write one or more versions of a function that executes only on specified types of Intel&reg; processors, as well as a generic version that executes on other Intel or non-Intel processors, using the 
		<span class="keyword">cpu_specific</span> and 
		<span class="keyword">cpu_dispatch</span> keywords. The Intel processor type is detected at run-time, and the corresponding function version is executed. This feature is available only for Intel processors based on IA-32 or Intel&reg; 64 architecture. It is not available for non-Intel processors or for Intel processors based on IA-64 architecture. Applications built using the manual processor dispatch feature may be more highly optimized for Intel processors than for non-Intel processors. 
	 </p>


	 <div class="section" id="GUID-053F5A41-23EB-4546-A1C8-B57C5B16C6D5"><h2 class="sectiontitle">Manual Processor Dispatch Programming Guidelines</h2> 
		 
		<p>Use the 
		  <span class="keyword">__declspec(cpu_dispatch(cpuid, cpuid,...))</span> syntax in your code to provide a list of targeted processors along with an empty function body/function stub. Use the 
		  <span class="keyword">__declspec(cpu_specific(cpuid))</span> in your code to declare each function version targeted at particular type[s] of processors. 
		</p>


		<p>The following table lists the values for 
		  <span class="keyword">cpuid</span>: 
		</p>
 
		
<div class="tablenoborder"><table cellpadding="4" summary="" id="GUID-3DD0437B-A624-470B-8E8A-806CABC6BEFE" frame="border" border="1" cellspacing="0" rules="all"> 
			 <thead align="left"> 
				<tr> 
				  <th class="cellrowborder" valign="top" width="17.006802721088434%" id="d201881e79"> 
					 <p>Argument for 
						<span class="keyword">cpuid</span> 
					 </p>
 
				  </th>
 
				  <th class="cellrowborder" valign="top" width="82.99319727891157%" id="d201881e88"> 
					 <p>Processors 
					 </p>
 
				  </th>
 
				</tr>
 
			 </thead>
 
			 <tbody> 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">core_3rd_gen_avx</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 3rd generation Intel&reg; Core&#8482; processor family with support for Intel&reg; Advanced Vector Extensions (Intel&reg; AVX) including the 
					 <span class="keyword">RDRND</span> instruction. 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">core_2nd_gen_avx</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 2nd generation Intel&reg; Core&#8482; processor family with support for Intel&reg; Advanced Vector Extensions (Intel&reg; AVX). 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">core_aes_pclmulqdq</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 ">Intel&reg; Core&#8482; processors with support for Advanced Encryption Standard (AES) instructions and carry-less multiplication instruction 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">core_i7_sse4_2</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Intel&reg; Core&#8482; i7 processors with Intel&reg; Streaming SIMD Extensions 4.2 (SSE4.2) instructions 
					 </p>
 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">core_2_duo_sse4_1</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Intel&reg; 45nm Hi-k next generation Intel&reg; Core&#8482; microarchitecture processors with Intel&reg; Streaming SIMD Extensions 4.1 (SSE4.1) instructions 
					 </p>
 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">core_2_duo_ssse3</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Intel&reg; Core&#8482;2 Duo processors and Intel&reg; Xeon&reg; processors with Intel&reg; Supplemental Streaming SIMD Extensions 3 (SSSE3) instructions 
					 </p>
 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">atom</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Intel&reg; Atom&#8482; processors with Intel&reg; Supplemental Streaming SIMD Extensions 3 (SSSE3) 
					 </p>
 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">pentium_4_sse3</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Intel&reg; Pentium 4 processor with Intel&reg; Streaming SIMD Extensions 3 (Intel&reg; SSE3) instructions, Intel&reg; Core&#8482; Duo processors, Intel&reg; Core&#8482; Solo processors 
					 </p>
 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">pentium_4</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Intel&reg; Intel Pentium 4 processors 
					 </p>
 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">pentium_m</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Intel&reg; Pentium M processors 
					 </p>
 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">pentium_iii</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Intel&reg; Pentium III processors 
					 </p>
 
				  </td>
 
				</tr>
 
				<tr> 
				  <td class="cellrowborder" valign="top" width="17.006802721088434%" headers="d201881e79 "> 
					 <p><span class="keyword">generic</span> 
					 </p>
 
				  </td>
 
				  <td class="cellrowborder" valign="top" width="82.99319727891157%" headers="d201881e88 "> 
					 <p>Other IA-32 or Intel 64 processors or compatible processors not provided by Intel Corporation 
					 </p>
 
				  </td>
 
				</tr>
 
			 </tbody>
 
		  </table>
</div>
 
		<div class="Note"><h3 class="NoteTipHead">Note</h3> 
		  <p>If no other matching Intel processor type is detected, the 
			 <var>generic</var> version of the function is executed. If you want the program to execute on non-Intel processors, a 
			 <var>generic</var> function version must be provided. You can control the degree of optimization of the 
			 <var>generic</var> function version and the processor features that it assumes. 
		  </p>
 
		</div> 
		<p>The 
		  <span class="keyword">cpuid</span> attributes are not case sensitive. The body of a function declared with 
		  <span class="keyword">__declspec(cpu_dispatch)</span> must be empty, and is referred to as a stub (an empty-bodied function). 
		</p>
 
		<p>The following example illustrates how the 
		  <span class="keyword">cpu_dispatch</span> and 
		  <span class="keyword">cpu_specific</span> keywords can be used to create function versions for the 2nd generation Intel Core processor family, for the Intel Core processor family, for the Intel Core 2 Duo processor family, and for other Intel and compatible, non-Intel processors. Each processor-specific function body might contain processor-specific intrinsic functions, or it might be placed in a separate source file and compiled with a processor-specific compiler option. 
		</p>
 
		
<div class="tablenoborder"><table cellpadding="4" summary="" id="GUID-8A58EED1-843C-4EE7-A409-B2305F5C611A" width="100%" frame="border" border="1" cellspacing="0" rules="all"> 
			 <thead align="left"> 
				<tr> 
				  <th class="cellrowborder" align="left" valign="top" id="d201881e344"> 
					 <p>Example 
					 </p>
 
				  </th>
 
				</tr>
 
			 </thead>
 
			 <tbody> 
				<tr> 
				  <td class="cellrowborder" valign="top" headers="d201881e344 "> 
					 <pre>#include &lt;stdio.h&gt;</pre> 
					 <pre>// need to create specific function versions for the following processors:</pre> 
					 <pre>__declspec(cpu_dispatch(core_2nd_gen_avx, core_i7_sse4_2, core_2_duo_ssse3, generic ))</pre> 
					 <pre>void dispatch_func() {};      //  stub that will call the appropriate specific function version   </pre> 
					 <pre>__declspec(cpu_specific(core_2nd_gen_avx))</pre> 
					 <pre>void dispatch_func() {</pre> 
					 <pre>printf("\nCode for 2nd generation Intel Core processors with support for AVX goes here\n");</pre> 
					 <pre>}</pre> 
					 <pre>__declspec(cpu_specific(core_i7_sse4_2))</pre> 
					 <pre>void dispatch_func() {</pre> 
					 <pre>printf("\nCode for Intel Core processors with support for SSE4.2 goes here\n");</pre> 
					 <pre>}</pre> 
					 <pre>__declspec(cpu_specific(core_2_duo_ssse3))</pre> 
					 <pre>void dispatch_func() {</pre> 
					 <pre>printf("\nCode for Intel Core 2 Duo processors with support for SSSE3 goes here\n");</pre> 
					 <pre>}</pre> 
					 <pre>__declspec(cpu_specific(generic))</pre> 
					 <pre>void dispatch_func() {</pre> 
					 <pre>printf("\nCode for non-Intel processors and generic Intel processors goes here\n");</pre> 
					 <pre>}</pre> 
					 <pre>int main() { </pre> 
					 <pre>dispatch_func();</pre> 
					 <pre>printf("Return from dispatch_func\n");</pre> 
					 <pre>return 0;</pre> 
					 <pre>}</pre> 
				  </td>
 
				</tr>
 
			 </tbody>
 
		  </table>
</div>
 
	 </div>
 
	 <div class="section" id="GUID-28F84233-1C7F-4FDF-AB3A-45A09E9F81C1"><h2 class="sectiontitle">Considerations</h2> 
		 
		<p>Before using manual dispatch, consider whether the benefits outweigh the additional effort and possible performance issues. You may encounter any one or all of the following issues when using manual processor dispatch in your code: 
		<ul type="disc" id="GUID-CADEB537-83F3-4CEA-9506-1E0C3BA282F5"> 
		  
		  <li> 
			 <p> code and executable sizes increase considerably 
			 </p>
 
		  </li>
 
		  <li> 
			 <p> additional performance overhead may be introduced because of additional function calls 
			 </p>
 
		  </li>
 
		</ul>
 
		</p>
 
		<p>Test your application on all targeted platforms before release. 
		</p>
 
	 </div>
 
	 <div class="section" id="GUID-FAC3D0FF-5B4A-4D14-B383-9868ABF7982D"><h2 class="sectiontitle">Using Pragmas to Target Processors Manually</h2> 
		 
		<p>You can use 
		  <samp class="codeph">#pragma 
			 <span class="option">intel optimization_parameter target_arch</span></samp> to flag those routines in your code that you want to execute on specified types of processors. This pragma controls the 
		<span class="option">-m</span> or 
		<span class="option">/arch</span> option at a routine level, overriding the option values specified at the command-line, using the same values as the 
		<span class="option">-m</span> or 
		<span class="option">/arch</span> option to target processors. The following example illustrates how to use the pragma to target a routine 
		<samp class="codeph">bar()</samp> to execute only on Intel&reg; AVX supported processors regardless of what the command-line has specified. 
		</p>
 
		
<div class="tablenoborder"><table cellpadding="4" summary="" id="GUID-8E7994F4-BD88-4B0C-A596-FEA0ADCCD931" width="100%" frame="border" border="1" cellspacing="0" rules="all"> 
			 <thead align="left"> 
				<tr> 
				  <th class="cellrowborder" align="left" valign="top" id="d201881e508"> 
					 <p>Example 
					 </p>
 
				  </th>
 
				</tr>
 
			 </thead>
 
			 <tbody> 
				<tr> 
				  <td class="cellrowborder" valign="top" headers="d201881e508 "> 
					 <pre>#pragma intel optimization_parameter target_arch=AVX</pre> 
					 <pre>void bar()</pre> 
					 <pre>{</pre> 
					 <pre>...</pre> 
					 <pre>}</pre> 
				  </td>
 
				</tr>
 
			 </tbody>
 
		  </table>
</div>
 
	 </div>
 
	 <p> 
	 
<div class="tablenoborder"><a name="d48e18"><!-- --></a><table cellpadding="4" summary="" id="d48e18" frame="border" border="1" cellspacing="0" rules="all"> 
		   
		  <thead align="left"> 
			 <tr> 
				<th class="cellrowborder" align="left" valign="top" width="100%" id="d201881e555"> 
				  <p id="d48e30"><a name="d48e30"><!-- --></a>Optimization Notice 
				  </p>
 
				</th>
 
			 </tr>
</thead>
 
		  <tbody> 
			 <tr> 
				<td class="bgcolor(#ccecff)" bgcolor="#ccecff" valign="top" width="100%" headers="d201881e555 "> 
				  <p>Intel's compilers may or may not optimize to the same degree for non-Intel microprocessors for optimizations that are not unique to Intel microprocessors. These optimizations include SSE2, SSE3, and SSSE3 instruction sets and other optimizations. Intel does not guarantee the availability, functionality, or effectiveness of any optimization on microprocessors not manufactured by Intel. Microprocessor-dependent optimizations in this product are intended for use with Intel microprocessors. Certain optimizations not specific to Intel microarchitecture are reserved for Intel microprocessors. Please refer to the applicable product User and Reference Guides for more information regarding the specific instruction sets covered by this notice. 
				  </p>
 
				  <p> Notice revision #20110804 
				  </p>
				  

				  </td>
 
			 </tr>
 
		  </tbody>
 
		</table>
</div>
 
	 </p>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-B97D1A7C-A8CA-4D3E-9732-0EA33CE1F777.htm">Processor Targeting</a></div>
</div>
<div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
