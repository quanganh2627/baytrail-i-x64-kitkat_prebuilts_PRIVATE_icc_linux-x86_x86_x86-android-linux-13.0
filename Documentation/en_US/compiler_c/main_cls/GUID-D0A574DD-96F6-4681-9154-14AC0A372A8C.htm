<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Integer Functions for Streaming SIMD Extensions">
<meta name="DC.subject" content="Class Libraries, integer vector classes, functions for SSE">
<meta name="keywords" content="Class Libraries, integer vector classes, functions for SSE">
<meta name="DC.Relation" scheme="URI" content="GUID-E8823D7E-4614-42A0-814E-B37EC0369E4E.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-D0A574DD-96F6-4681-9154-14AC0A372A8C">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Integer Functions for Streaming SIMD Extensions</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="intel.cpp.cppref_class_int_int"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-D0A574DD-96F6-4681-9154-14AC0A372A8C">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Integer Functions for Streaming SIMD Extensions</h1>
 
  
  <div> 
    <div class="Note"><h3 class="NoteTipHead">Note</h3>
      <p>You must include 
        <span class="filepath">fvec.h</span> header file for the following functionality.
      </p>

    </div> 
    <p>Compute the element-wise maximum of the respective signed integer words in 
      <samp class="codeph">A</samp> and 
      <samp class="codeph">B</samp>.
    </p>
 
    <p><samp class="codeph">Is16vec4 simd_max(Is16vec4 A, Is16vec4 B);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_max_pi16</span>
    </p>
 
    <p>Compute the element-wise minimum of the respective signed integer words in 
      <samp class="codeph">A</samp> and 
      <samp class="codeph">B</samp>.
    </p>
 
    <p><samp class="codeph">Is16vec4 simd_min(Is16vec4 A, Is16vec4 B);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_min_pi16</span>
    </p>
 
    <p>Compute the element-wise maximum of the respective unsigned bytes in 
      <samp class="codeph">A</samp> and 
      <samp class="codeph">B</samp>.
    </p>
 
    <p><samp class="codeph">Iu8vec8 simd_max(Iu8vec8 A, Iu8vec8 B);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_max_pu8</span>
    </p>
 
    <p>Compute the element-wise minimum of the respective unsigned bytes in 
      <samp class="codeph">A</samp> and 
      <samp class="codeph">B</samp>.
    </p>
 
    <p><samp class="codeph">Iu8vec8 simd_min(Iu8vec8 A, Iu8vec8 B);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_min_pu8</span>
    </p>
 
    <p>Create an 8-bit mask from the most significant bits of the bytes in 
      <samp class="codeph">A</samp>.
    </p>
 
    <p><samp class="codeph">int move_mask(I8vec8 A);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_movemask_pi8</span>
    </p>
 
    <p>Conditionally store byte elements of 
      <samp class="codeph">A</samp> to address 
      <samp class="codeph">p</samp>. The high bit of each byte in the selector 
      <samp class="codeph">B</samp> determines whether the corresponding byte in 
      <samp class="codeph">A</samp> will be stored.
    </p>
 
    <p><samp class="codeph">void mask_move(I8vec8 A, I8vec8 B, signed char *p);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_maskmove_si64</span>
    </p>
 
    <p>Store the data in 
      <samp class="codeph">A</samp> to the address 
      <samp class="codeph">p</samp> without polluting the caches. 
      <samp class="codeph">A</samp> can be any 
      <samp class="codeph">Ivec</samp> type.
    </p>
 
    <p><samp class="codeph">void store_nta(__m64 *p, M64 A);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_stream_pi</span>
    </p>
 
    <p>Compute the element-wise average of the respective unsigned 8-bit integers in 
      <samp class="codeph">A</samp> and 
      <samp class="codeph">B</samp>.
    </p>
 
    <p><samp class="codeph">Iu8vec8 simd_avg(Iu8vec8 A, Iu8vec8 B);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_avg_pu8</span>
    </p>
 
    <p>Compute the element-wise average of the respective unsigned 16-bit integers in 
      <samp class="codeph">A</samp> and 
      <samp class="codeph">B</samp>.
    </p>
 
    <p><samp class="codeph">Iu16vec4 simd_avg(Iu16vec4 A, Iu16vec4 B);</samp><br>Corresponding intrinsic: 
      <span class="keyword">_mm_avg_pu16</span> 
    </p>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-E8823D7E-4614-42A0-814E-B37EC0369E4E.htm">Integer Vector Classes</a></div>
</div>
<div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
