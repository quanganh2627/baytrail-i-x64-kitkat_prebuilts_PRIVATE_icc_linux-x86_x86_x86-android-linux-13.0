<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Intel-Specific Pragmas">
<meta name="DC.subject" content="Pragmas: Intel-specific">
<meta name="keywords" content="Pragmas: Intel-specific">
<meta name="DC.Relation" scheme="URI" content="GUID-DD32852C-A0F9-4AC6-BF67-D10D064CC87A.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-346BAAA5-CF2D-4A26-9194-CA840BFB34E5">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Intel-Specific Pragmas</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="cppref_pragmas_intel_specific"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-346BAAA5-CF2D-4A26-9194-CA840BFB34E5">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Intel-Specific Pragmas</h1>
 
   
  <div> 
	 <p>The Intel-specific C++ compiler pragmas described in the Intel-Specific Pragma reference are listed below. 
	 </p>
 
	 <p>Some pragmas are available for both Intel&reg; and non-Intel microprocessors but they may perform additional optimizations for Intel&reg; microprocessors than they perform for non-Intel microprocessors. 
	 </p>
 
	 <p>Click on the pragmas for a more detailed description. 
	 </p>
 
	 
<div class="tablenoborder"><table cellpadding="4" summary="" id="GUID-58B35F83-13A8-4E74-9051-021F92280905" frame="border" border="1" cellspacing="0" rules="all"> 
		   
		   
		  <thead align="left"> 
			 <tr> 
				<th class="cellrowborder" align="left" valign="top" width="30%" id="d171600e51"> 
				  <p>Pragma 
				  </p>
 
				</th>
 
				<th class="cellrowborder" align="left" valign="top" width="70%" id="d171600e57"> 
				  <p>Description 
				  </p>
 
				</th>
 
			 </tr>
 
		  </thead>
 
		  <tbody> 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-BA00910D-0AA1-4D58-8516-BA97B7F0C685.htm#GUID-BA00910D-0AA1-4D58-8516-BA97B7F0C685"><span class="keyword">alloc_section</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>allocates variable in specified section 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-8381DCC7-F629-4B56-9558-B1BEAF8890DF.htm#GUID-8381DCC7-F629-4B56-9558-B1BEAF8890DF"><span class="keyword">cilk grainsize</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>specifies the grain size for one 
					 <samp class="codeph">cilk_for</samp> loop 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-03B94EAB-70E2-4B45-B275-D73FD76961A0.htm#GUID-03B94EAB-70E2-4B45-B275-D73FD76961A0"><span class="keyword">distribute_point</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>instructs the compiler to prefer loop distribution at the location indicated 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-0ECDCF52-2977-4857-9A74-2472E634FD88.htm#GUID-0ECDCF52-2977-4857-9A74-2472E634FD88"><span class="keyword">inline</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>instructs the compiler that the user prefers that the calls in question be inlined 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-DDD509D1-1956-4CF9-8F02-56296FE6F680.htm#GUID-DDD509D1-1956-4CF9-8F02-56296FE6F680"><span class="keyword">intel_omp_task</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p> for Intel legacy tasking, specifies a unit of work, potentially executed by a different thread 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-DD40DE97-DDD1-4FC1-A083-15B62414CCAA.htm#GUID-DD40DE97-DDD1-4FC1-A083-15B62414CCAA"><span class="keyword">intel_omp_taskq</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p> for Intel legacy tasking, specifies a unit of work, potentially executed by a different thread 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-B25ABCC2-BE6F-4599-AEDF-2434F4676E1B.htm#GUID-B25ABCC2-BE6F-4599-AEDF-2434F4676E1B"><span class="keyword">ivdep</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>instructs the compiler to ignore assumed vector dependencies 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-5C5112FB-898C-41E4-86EA-0CFC27591F39.htm#GUID-5C5112FB-898C-41E4-86EA-0CFC27591F39"><span class="keyword">loop_count</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>indicates what the loop count is likely to be 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-056FDBF5-FF5D-435E-8BE5-BF180F1E3F57.htm#GUID-056FDBF5-FF5D-435E-8BE5-BF180F1E3F57"><span class="keyword">nofusion</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>Prevents a loop from fusing with adjacent loops 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-CFBEC461-748D-4162-A669-C4F42848267F.htm#GUID-CFBEC461-748D-4162-A669-C4F42848267F"><span class="keyword">novector</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>specifies that the loop should never be vectorized 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-EAB414FD-40C6-4054-B094-0BA70824E2A2.htm"><span class="keyword">offload</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>causes the statement following the pragma to execute on the target; this pragma only applies to Intel&reg; MIC Architecture. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-DC02F0FB-12D1-4DEF-8268-B02734B62462.htm"><span class="keyword">offload_attribute</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>specifies that all functions and variables declared subsequent to the pragma are available on the coprocessor; this pragma only applies to Intel&reg; MIC Architecture. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-F66EEDA2-2FB9-4952-A8FC-E997F92DDF0A.htm"><span class="keyword">offload_transfer</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>initiates asynchronous data transfer, or initiates and completes synchronous data transfer; this pragma only applies to Intel&reg; MIC Architecture. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-89A57D4E-CBA3-43FA-8DD3-613863531A8E.htm"><span class="keyword">offload_wait</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>specifies a wait for a previously initiated asynchronous activity; this pragma only applies to Intel&reg; MIC Architecture. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-630D512F-C1A3-4F92-81D3-D2457EDBD572.htm"><span class="keyword">omp atomic</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>ensures that a specific memory location is updated atomically, which prevents the possibility of multiple, simultaneous reading and writing of threads 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-243B37C4-0633-45C1-8207-66569BFDE799.htm"><span class="keyword">omp task</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>defines a task region 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-FF65F8CC-540B-4BEF-92F4-543DA9AD0E32.htm"><span class="keyword">omp taskyield</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>enables or disables optimizations for specific functions; provides some degree of compatibility with Microsoft's implementation of 
					 <span class="keyword">optimize</span> pragma 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-25CA51B4-EF0F-428D-A9C3-F013AB19AA40.htm"><span class="keyword">omp taskwait</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p> specifies a wait on the completion of child tasks generated since the beginning of the current task 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-178200E0-CD58-48B6-9863-25FD01A60A25.htm#GUID-178200E0-CD58-48B6-9863-25FD01A60A25"><span class="keyword">optimize</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 ">enables [disables] optimizations for code after this pragma till another optimize pragma or end of the translation unit is encountered 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-15460543-7B8B-4484-9B53-86B69146ABB9.htm#GUID-15460543-7B8B-4484-9B53-86B69146ABB9"><span class="keyword">optimization_level</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>indicates change of optimization from current line of the compilation unit 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-197FE65C-470F-4979-87F3-3BC50D066D9F.htm#GUID-197FE65C-470F-4979-87F3-3BC50D066D9F"><span class="keyword">optimization_parameter</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>tells the compiler to generate code specialized for a particular processor, at the function level, similar to the -m (/arch) option 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-9FF30CC8-74BB-48E6-A1A7-D2D67754BDB0.htm#GUID-9FF30CC8-74BB-48E6-A1A7-D2D67754BDB0"><span class="keyword">parallel/noparallel</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>facilitates auto-parallelization of an immediately following loop; using keyword [always] forces the compiler to auto-parallelize; noparallel pragma prevents auto-parallelization 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-3A086451-4C82-4BB1-B742-FF93EBF60DA3.htm#GUID-3A086451-4C82-4BB1-B742-FF93EBF60DA3"><span class="keyword">prefetch/noprefetch</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>asserts that the data prefetches are generated or not generated for some memory references; this pragma only applies to Intel&reg; MIC Architecture. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-1EA04294-988E-4152-B584-B028FD6FAC48.htm#GUID-1EA04294-988E-4152-B584-B028FD6FAC48"><span class="keyword">simd</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p> instructs the compiler to vectorize the loop below 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-30B36136-E399-4D7A-9BF8-06D96B8536E9.htm#GUID-30B36136-E399-4D7A-9BF8-06D96B8536E9"><span class="keyword">unroll/nounroll</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>instructs the compiler the number of times to unroll/not to unroll a loop 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-4BD463BD-B012-4039-B4C9-9E70384D0F9D.htm#GUID-4BD463BD-B012-4039-B4C9-9E70384D0F9D"><span class="keyword">unroll_and_jam/nounroll_and_jam</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>instructs the compiler to partially unroll higher loops and jam the resulting loops back together. Specifying the 
					 <span class="keyword">nounroll_and_jam</span> pragma prevents unrolling and jamming of loops. 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-25C4403F-8772-4168-8087-F19BAF4EB432.htm#GUID-25C4403F-8772-4168-8087-F19BAF4EB432"><span class="keyword">unused</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>describes variables that are unused (warnings not generated) 
				  </p>
 
				</td>
 
			 </tr>
 
			 <tr> 
				<td class="cellrowborder" align="left" valign="top" width="30%" headers="d171600e51 "> 
				  <p><a href="GUID-2B528C72-29B4-4DBC-8B91-EE4D1A03A850.htm#GUID-2B528C72-29B4-4DBC-8B91-EE4D1A03A850"><span class="keyword">vector</span></a> 
				  </p>
 
				</td>
 
				<td class="cellrowborder" align="left" valign="top" width="70%" headers="d171600e57 "> 
				  <p>indicates to the compiler that the loop should be vectorized according to the arguments: 
					 <samp class="codeph">always/aligned/unaligned/nontemporal/temporal</samp> 
				  </p>
 
				</td>
 
			 </tr>
 
		  </tbody>
 
		</table>
</div>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-DD32852C-A0F9-4AC6-BF67-D10D064CC87A.htm">Pragmas</a></div>
</div>
<div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
