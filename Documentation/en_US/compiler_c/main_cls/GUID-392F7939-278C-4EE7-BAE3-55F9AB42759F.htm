<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="concept">
<meta name="DC.Title" content="Writing Target-Specific Code Using a Pragma">
<meta name="DC.subject" content="code, target-specific, __MIC__, target-specific code, writing, __INTEL_OFFLOAD, preprocessor variables">
<meta name="keywords" content="code, target-specific, __MIC__, target-specific code, writing, __INTEL_OFFLOAD, preprocessor variables">
<meta name="DC.Relation" scheme="URI" content="GUID-44F5B8E2-8EFD-4C51-ACF8-357900798834.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-BCD20CAF-C7E3-4DD1-A09C-F87479442B53.htm#GUID-BCD20CAF-C7E3-4DD1-A09C-F87479442B53">
<meta name="DC.Relation" scheme="URI" content="GUID-D1B56D32-2D79-458C-A27E-A0C27AE122B8.htm#GUID-D1B56D32-2D79-458C-A27E-A0C27AE122B8">
<meta name="DC.Relation" scheme="URI" content="GUID-2077C232-DB36-4D54-9429-57F4660AB4BB.htm#GUID-2077C232-DB36-4D54-9429-57F4660AB4BB">
<meta name="DC.Relation" scheme="URI" content="GUID-401EDB00-AD07-4085-97EB-7C68BA42A713.htm#GUID-401EDB00-AD07-4085-97EB-7C68BA42A713">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-392F7939-278C-4EE7-BAE3-55F9AB42759F">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Writing Target-Specific Code Using a Pragma</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="intel.cpp.cncpt_writing_trgt_code"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-392F7939-278C-4EE7-BAE3-55F9AB42759F">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Writing Target-Specific Code Using a 
	 <span>Pragma</span></h1>
 
   
  <div> 
	 <p><span id="d67e97"><a name="d67e97"><!-- --></a>This topic only applies to Intel&reg; Many Integrated Core Architecture (Intel&reg; MIC Architecture).</span> 
          </p>
 
	 <p>You can write functions that you intend to run on a target, and sections of offloaded code, to take advantage of target-specific<span> intrinsic</span> functions. 
	 </p>
 
	 <p> When the compiler generates code for the coprocessor, it defines the macro 
		<samp class="codeph">__MIC__</samp>. You can write target-specific code within 
		<span>an 
		  <samp class="codeph">#ifdef __MIC__</samp></span> section. 
	 </p>
 
	 <div class="Note"><h3 class="NoteTipHead">Note</h3> 
		<p>Do not use the 
			 <samp class="codeph">__MIC__</samp> macro inside the statement following a 
			 <samp class="codeph">#pragma offload 
			 </samp> statement. You can, however, use this macro in a subprogram called from the<span> pragma</span>. 
		  </p>
 
	 </div> 
	 <div class="section" id="GUID-0CDF0D42-3CD6-4211-874C-7670E313CE4D"><h2>Example</h2> 
		<p>The implementation of the class 
		  <samp class="codeph">F32vec</samp> is specialized for the CPU and the coprocessor. The offloaded code can use the specialized version if it runs on the coprocessor. If the offload fails and the construct runs on the CPU, it uses the CPU version. 
		</p>
 
		<pre><span>// The class F32vec will be used in offloaded code
// It needs the target(mic) attribute

#pragma offload_attribute(push,target(mic))

// Use customized versions for the CPU and the coprocessor

#ifdef __MIC__

	// The Intel&reg; MIC Architecture version of the class is in micvec.h
	#include &lt;micvec.h&gt;

#else
	// The CPU version is written inline
	class F32vec16
	{
  		public:
    		...
    		friend F32vec16 sqrt(const F32vec16&amp; a);
	};
#endif

mysqrt()
{
   #ifdef __MIC__
        F32vec16 w = ...;
        F32vec16 s;
        s = sqrt(w);
   #endif
               ...
}

#pragma offload_attribute(pop)

int main()
{
   #pragma offload target(mic)
     {
        mysqrt(;
     }
     ...
}</span></pre> 
		</div>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-44F5B8E2-8EFD-4C51-ACF8-357900798834.htm">Offload Using a Pragma</a></div>
</div>
<div class="See Also"><h2>See Also</h2>
<div class="linklist">
<div><a href="GUID-BCD20CAF-C7E3-4DD1-A09C-F87479442B53.htm#GUID-BCD20CAF-C7E3-4DD1-A09C-F87479442B53">Special Cases 
		  </a></div>
<div><a href="GUID-D1B56D32-2D79-458C-A27E-A0C27AE122B8.htm#GUID-D1B56D32-2D79-458C-A27E-A0C27AE122B8">Predefined Macros for Intel&reg; MIC&#8482; Architecture 
		  </a></div>
<div><a href="GUID-2077C232-DB36-4D54-9429-57F4660AB4BB.htm#GUID-2077C232-DB36-4D54-9429-57F4660AB4BB">no-offload 
		  </a>  
		  </div>
<div><a href="GUID-401EDB00-AD07-4085-97EB-7C68BA42A713.htm#GUID-401EDB00-AD07-4085-97EB-7C68BA42A713">mmic 
		  </a>  
		  </div></div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
