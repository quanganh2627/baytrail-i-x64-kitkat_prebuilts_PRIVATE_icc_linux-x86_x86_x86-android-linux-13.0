<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="OpenMP* Source Compatibility and Interoperability with Other Compilers">
<meta name="DC.subject" content="-openmp-lib compiler option, /Qopenmp-lib compiler option, Intel&reg; compatibility libraries for OpenMP*, OMP directives, compatibility with other compilers, compatibility libraries, guidelines for using libraries, legacy libraries, object-level interoperability, source compatibility">
<meta name="keywords" content="-openmp-lib compiler option, /Qopenmp-lib compiler option, Intel&reg; compatibility libraries for OpenMP*, OMP directives, compatibility with other compilers, compatibility libraries, guidelines for using libraries, legacy libraries, object-level interoperability, source compatibility">
<meta name="DC.Relation" scheme="URI" content="GUID-28F19C15-D059-4709-AE63-E5CC30543210.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-1E91DFFD-D7CD-4AF5-B911-7E5D1CCDBBA5.htm#GUID-1E91DFFD-D7CD-4AF5-B911-7E5D1CCDBBA5">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-BAD5FFB7-D761-45CA-B539-E041CD0486E9">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>OpenMP* Source Compatibility and Interoperability with Other Compilers</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="optaps_par_openmp_multiple_compilers"></MSHelp:Keyword>
<MSHelp:Keyword Index="F" Term="intel.cpp.optaps_par_openmp_multiple_compilers"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-BAD5FFB7-D761-45CA-B539-E041CD0486E9">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">OpenMP* Source Compatibility and Interoperability with Other Compilers</h1>
 
   
  <div> 
	 <p>Intel compilers include OpenMP* libraries that are object-level compatible with OpenMP support provided by certain versions of the following compilers: 
	 <ul type="disc" id="GUID-44436FC2-1333-4EC7-BD52-075F8C6754ED"> 
		<li>Microsoft Visual C++* compiler on Windows* OS 
		</li>
 
		<li>GNU* compilers on Linux* OS and Mac OS* X 
		</li>
 
		<li>Intel compiler version 10.<var>x</var> (and later) 
		</li>
 
	 </ul>
 
	 </p>
 
	 <p>The term "object-level interoperability" refers to the ability to link object files and libraries generated by one compiler with object files and libraries generated by the second compiler, such that the resulting executable runs successfully. In contrast, "source compatibility" means that the entire application is compiled and linked by one compiler, and you do not need to modify the sources to get the resulting executable to run successfully. 
	 </p>
 
	 <p>Different compilers support different versions of the OpenMP specification. Based on the OpenMP features your application uses, determine what version of the OpenMP specification your application requires. If your application uses an OpenMP specification level equal or less than the OpenMP specification level supported by all the compilers, your application should have source compatibility with all compilers, but you need to link all object files and libraries with the same compiler's OpenMP libraries. 
	 </p>
 
	 <p>The Intel OpenMP run-time libraries provide source compatibility and object-level interoperability with the OpenMP support provided by: 
	 </p>
 
	 <ul type="disc" id="GUID-8C554FB9-B39D-4398-B2F5-7BA0F1AF413A"> 
		<li> 
		  <p>Certain versions of Microsoft Visual C++* 
			 <span><span>libraries</span></span> that support OpenMP, starting with Microsoft Visual C++ 2005 [<span><span>on Windows* OS]</span></span>. 
		  </p>
 
		</li>
 
		<li> 
		  <p>Certain versions of GNU* 
			 <span class="keyword">gcc</span>* that support OpenMP, starting with GNU* 
			 <span class="keyword">gcc</span>* version 4.42 
			 <span><span>[on Linux* OS and Mac OS* X]</span></span>. 
		  </p>
 
		</li>
 
		<li> 
		  <p>Intel compilers versions 10.0 and later and their supplied OpenMP 'compatibility' libraries. 
		  </p>
 
		</li>
 
	 </ul>
 
	 <p>For Fortran applications on Linux systems, it is not possible to link objects compiled by the Intel&reg; Fortran Compiler (<span class="keyword">ifort</span>) with objects compiled by the GNU* Fortran compiler (<span class="keyword">gfortran</span>). Thus, for mixed-language C++ and Fortran applications, you can do one of the following: 
	 </p>
 
	 <ul type="disc" id="GUID-1B37A04A-D699-4485-9D48-0225A9AEB988"> 
		<li> 
		  <p>Combine objects created by 
			 <span class="keyword">gfortran</span> and Intel&reg; C++ objects. 
		  </p>
 
		</li>
 
		<li> 
		  <p>Combine objects created by the Intel C++ compiler and the Intel Fortran Compiler. 
		  </p>
 
		</li>
 
	 </ul>
 
	 <p><strong>Guidelines for Using Different Intel Compiler Versions</strong> 
	 </p>
 
	 <p>To avoid possible linking or run-time problems, follow these guidelines: 
	 </p>
 
	 <ul type="disc" id="GUID-EA69BA67-035B-4075-82CE-46192D513CC8"> 
		<li> 
		  <p> Object modules produced by current Intel compilers are not compatible with object modules compiled by Intel compilers prior to version 10.0. 
		  </p>
 
		</li>
 
		<li> 
		  <p>Object modules produced by current Intel compilers are compatible with object modules produced by the compatibility libraries, for Intel compiler versions 10.0 and later. 
		  </p>
 
		</li>
 
		<li> 
		  <p>Use dynamic instead of static OpenMP libraries to avoid linking multiple copies of the libraries into a single program. For details, see 
			 <a href="GUID-4B60BCA6-1948-4EB0-A9F3-D56AA1C683F7.htm#GUID-4B60BCA6-1948-4EB0-A9F3-D56AA1C683F7">OpenMP* Support Libraries</a>. 
		  </p>
 
		</li>
 
	 </ul>
 
	 <p><strong>Guidelines for Using Intel and Non-Intel Compilers</strong> 
	 </p>
 
	 <p>To avoid possible linking or run-time problems, follow these guidelines: 
	 </p>
 
	 <ul type="disc" id="GUID-C8ABAA38-9E2A-45EF-A9E7-593412EDA13F"> 
		<li> 
		  <p>Always link using the Intel compiler OpenMP libraries. This avoids linking multiple copies of the OpenMP runtime libraries from different compilers. It is easiest if you use the Intel compiler command (driver) to link the application, but it is possible to link with the Intel compiler OpenMP libraries when linking the application using the GNU* or Visual C++ compiler (or linker) commands. 
		  </p>
 
		</li>
 
		<li> 
		  <p>If possible, compile all the OpenMP sources with the same compiler. If you compile (not link) using multiple compilers such as the Microsoft Visual C++* or GNU compilers that provide object-level interoperability with the libraries, see the instructions in 
			 <a href="GUID-0E85F327-A19E-410C-8203-0A89C8F32635.htm#GUID-0E85F327-A19E-410C-8203-0A89C8F32635">Using the OpenMP* Libraries</a>. 
		  </p>
 
		</li>
 
		<li> 
		  <p>Use dynamic instead of static OpenMP libraries to avoid linking multiple copies of the libraries into a single program. For details, see 
			 <a href="GUID-4B60BCA6-1948-4EB0-A9F3-D56AA1C683F7.htm#GUID-4B60BCA6-1948-4EB0-A9F3-D56AA1C683F7">OpenMP* Support Libraries</a>. 
		  </p>
 
		</li>
 
	 </ul>
 
	 <p id="LIMITATIONS"><a name="LIMITATIONS"><!-- --></a><strong>Limitations When Using OpenMP Libraries with Other Compilers</strong> 
	 </p>
 
	 <p>Limitations of threadprivate objects on object-level interoperability: 
	 </p>
 
	 <ul type="disc" id="GUID-38138FDA-9F77-45DA-ADD8-3A5375FF9796"> 
		<li> 
		  <p>On Windows OS systems, the Intel compilers by default (<span class="option">/Qopenmp-threadprivate:legacy</span>) use a different mechanism to reference threadprivate data than does the Microsoft Visual C++* compiler. If you declare a variable as threadprivate in your code and you compile the code with both Intel compilers and Visual C++ compilers, the code compiled by the Intel compiler and the code compiled by the Visual C++* compiler reference different locations for the variable even when referenced by the same thread. Use the 
  <span class="option">/Qopenmp-threadprivate:compat</span> compiler option when compiling with the Intel compilers to enable the code that they compile to reference the same threadprivate locations as code compiled by Microsoft Visual C++*. 
  </p>
 
  </li>
 
  <li> 
	 <p>On Linux OS systems, the Intel compilers by default (<span class="option">-openmp-threadprivate:legacy</span>) use a different mechanism to reference threadprivate data than the GNU* compilers. If you declare a variable as threadprivate in your code and you compile the code with both Intel compilers and GNU compilers, the code compiled by the Intel compiler and the code compiled by the GNU compiler reference different locations for the variable even when referenced by the same thread. Use the<span class="option"> –openmp-threadprivate:compat</span> compiler option when compiling with Intel compilers to enable the code that they compile to reference the same threadprivate locations as code compiled by the GNU* compilers. 
  </p>
 
  </li>
 
  <li> 
	 <p>On Mac OS* X systems, the operating system does not currently support the mechanism used by the GNU* compiler to support threadprivate data. Threadprivate data objects are accessible only by name from object files compiled by the Intel compilers. The Intel compilers for Mac OS X do not accept the 
  <span class="option">–openmp-threadprivate</span> compiler option. 
  </p>
 
  </li>
 
  </ul>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-28F19C15-D059-4709-AE63-E5CC30543210.htm">OpenMP* Support</a></div>
</div>
<div><h2>See Also</h2>
<div class="linklist">
<div><a href="GUID-1E91DFFD-D7CD-4AF5-B911-7E5D1CCDBBA5.htm#GUID-1E91DFFD-D7CD-4AF5-B911-7E5D1CCDBBA5">OpenMP* and Parallel Processing Options 
		  </a> &nbsp; 
		  </div></div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
