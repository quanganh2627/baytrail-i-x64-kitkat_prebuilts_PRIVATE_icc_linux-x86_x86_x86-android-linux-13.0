<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="OptionRef">
<meta name="DC.Title" content="cilk grainsize">
<meta name="abstract" content="Specifies the grain size for one cilk_for loop.">
<meta name="description" content="Specifies the grain size for one cilk_for loop.">
<meta name="DC.subject" content="cilk grainsize, pragma cilk grainsize">
<meta name="keywords" content="cilk grainsize, pragma cilk grainsize">
<meta name="DC.Relation" scheme="URI" content="GUID-C2D70038-AED3-4E15-9B1A-0D9C24D9D714.htm">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-8381DCC7-F629-4B56-9558-B1BEAF8890DF">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>cilk grainsize</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="intel.cpp.cppref_pragma_cilk_grainsize"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-8381DCC7-F629-4B56-9558-B1BEAF8890DF">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>



<h1 class="topictitle1">cilk grainsize</h1>

<!--Specifies the grain size for one cilk_for loop.-->

<div><p><span id="SHORTDESC"><a name="SHORTDESC"><!-- --></a>Specifies the grain size for one <span class="keyword">cilk_for </span>loop.</span></p>



<div class="section" id="GUID-9083B82F-D559-43CD-91B3-01EBB964C6B8"><h2>Syntax</h2>
<table cellspacing="0" cellpadding="1" border="0" width="85%" class="syntaxdiagramtbl" style="border-spacing:0; border-collapse:collapse"><tr><td valign="top" class="noborder" width="100%"><p><span class="kwd"> #pragma cilk grainsize</span><span class="oper"> = </span><span class="var">expression</span></p></td></tr></table></div>

<div class="section" id="GUID-159ED4E5-257D-40F5-ABAB-5FB5118432AA"><h2>Arguments</h2>
  <table cellspacing="0" cellpadding="4" border="0" width="90%" style="border-spacing:0; border-collapse:collapse"><tr><td valign="top" width="30%" class="noborder"><p><var> expression</var></p></td>
<td valign="top" class="noborder"><p>Specifies the grain size of a loop. The expression is evaluated at run time.</p>
<p>The result of a grain size less than zero is undefined.</p>
<p>If the <span class="keyword">grainsize</span> pragma is omitted or a <span class="keyword">grainsize</span> of zero is specified, the system calculates a default value that works well for most loops.</p>
</td>
</tr></table>
</div>


<div class="section" id="GUID-562EE3ED-51B9-4B17-8566-42A8A7305949"><h2>Description</h2>

<p>This pragma allows you to specify the grain size for a single instance of a <span class="keyword">cilk_for</span> loop.</p>
<p> The grain size is the maximum number of iterations that the <span class="keyword">cilk_for</span> loop will spawn as a single chunk. The <span class="keyword">cilk_for</span> statement divides the loop into chunks (grains) containing one or more loop iterations. Each grain is executed serially and is spawned as a chunk during the execution of the loop.</p>
<p>For loops where individual iterations are particularly large or where the amount of work varies widely between iterations, use this pragma to reduce the grain size, probably down to 1. A small grain size increases parallelism and improves load balancing at the cost of increased scheduling and function call overhead. In general, the larger and more unbalanced the loop iterations, the smaller the grain size should be.</p>
<p>For loops whose body is short, use a larger grain size to reduce the scheduling overhead. For grain sizes larger than 1000 to 2000 iterations, the overhead of the  <span class="keyword">cilk_for</span> statement becomes inconsequential, even when the amount of work per iteration is very small. Thus, the benefit of increasing the grain size beyond these numbers is negligible. Using a grain size that is too large will reduce parallelism and impede load balancing. Specifically, you should not try to divide the loop such that there is one grain per worker (CPU), as that will completely defeat the scheduler's attempts at load balancing and will almost certainly result in lost performance.</p>
<p> The default <span class="keyword">grainsize</span>, when this pragma is not used, works well for most loops. If you do choose to change the grain size, be sure to carry out performance testing to ensure that you have made the loop faster, not slower.</p>



<p>If you do not specify a grain size or if you specify a grain size of zero, the system calculates the default value as if the following pragma were used:</p>
<p><samp class="codeph">#pragma cilk grainsize = min(2048, ceil(N / (8 * p)))</samp></p>
<p>where</p>
<p> <var>N</var> is the number of loop iterations.</p>
<p><var>p</var> is the number of workers created during the current run of the program.</p>
<p>This formula gives good results for most loops. For loops with less than eight times the number of workers, the grain size is set to 1 and each loop iteration may be run in parallel. For loops with more than 16,484 times the number of workers iterations, the grain size will be set to 2048.</p>
<div class="Note"><h3 class="NoteTipHead">Note</h3><p>The formula for calculating the default value is not part of the Intel&reg; Cilk&#8482; Plus specification.</p>
</div></div>


<div class="section" id="GUID-24460E43-D730-47C2-90E0-D3AD81E54D4F"><h2 class="sectiontitle">Examples:</h2><p>The following example sets the grain size according to the number of workers such that the grain size will be smaller on systems with more cores (and hence more workers):</p>
<pre>#pragma cilk grainsize = n/(410*__cilkrts_get_nworkers())</pre></div>
</div>


<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-C2D70038-AED3-4E15-9B1A-0D9C24D9D714.htm">Intel-Specific Pragma Reference</a></div>
</div>
<div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div>
</body>
</html>
