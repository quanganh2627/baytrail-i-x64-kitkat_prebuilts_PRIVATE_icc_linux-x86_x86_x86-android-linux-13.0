<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns:MSHelp="http://www.microsoft.com/MSHelp/" lang="en-us" xml:lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="DC.Type" content="topic">
<meta name="DC.Title" content="Other Considerations">
<meta name="DC.subject" content="gcc* considerations, optimization, compiler options, for optimization, gcc* code with Intel&reg; C++">
<meta name="keywords" content="gcc* considerations, optimization, compiler options, for optimization, gcc* code with Intel&reg; C++">
<meta name="DC.Relation" scheme="URI" content="GUID-54286E58-FE02-4F8D-B280-3BA2AADB2B4D.htm">
<meta name="DC.Relation" scheme="URI" content="GUID-CDCCCACD-A61C-40C5-A342-E452C95E1608.htm#GUID-CDCCCACD-A61C-40C5-A342-E452C95E1608">
<meta name="DC.Relation" scheme="URI" content="GUID-A9831327-FFAD-4573-BFCC-22EF81EB9DDA.htm#GUID-A9831327-FFAD-4573-BFCC-22EF81EB9DDA">
<meta name="DC.Relation" scheme="URI" content="GUID-EA4DC01B-91A3-45B2-9F6B-57228F898362.htm#GUID-EA4DC01B-91A3-45B2-9F6B-57228F898362">
<meta name="DC.Relation" scheme="URI" content="http://www.intel.com/software/products/softwaredocs_feedback">
<meta name="DC.Format" content="XHTML">
<meta name="DC.Identifier" content="GUID-CB6DFD5D-FFAB-46CD-B2D9-EBCBBB981D0F">
<meta name="DC.Language" content="en-US">
<link rel="stylesheet" type="text/css" href="intel_css_styles.css">
<title>Other Considerations</title>
<xml>
<MSHelp:Attr Name="DocSet" Value="Intel"></MSHelp:Attr>
<MSHelp:Attr Name="Locale" Value="kbEnglish"></MSHelp:Attr>
<MSHelp:Keyword Index="F" Term="bldaps_port_other"></MSHelp:Keyword>
<MSHelp:Keyword Index="F" Term="intel.cpp.bldaps_port_other"></MSHelp:Keyword>
<MSHelp:Attr Name="TopicType" Value="kbReference"></MSHelp:Attr>
</xml>
</head>
<body id="GUID-CB6DFD5D-FFAB-46CD-B2D9-EBCBBB981D0F">
 <!-- ==============(Start:NavScript)================= -->
 <script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
 <script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
 <!-- ==============(End:NavScript)================= -->
<p id="header_text" style="margin-bottom : 20pt"><em>Intel&reg; C++ Compiler XE 13.1 User and Reference Guides</em></p>


 
  <h1 class="topictitle1">Other Considerations</h1>
 
   
  <div> 
    <p>There are some notable differences between the 
      <span>Intel&reg; C++ 
      </span> 
       Compiler and gcc. Consider the following as you begin compiling your source code with the 
      <span>Intel&reg; C++ 
      </span> Compiler. 
    </p>
 
    <div class="section" id="GUID-E2B1D063-B83C-432D-9F35-CC89C2CAA38B"><h2 class="sectiontitle">Setting the Environment</h2> 
       
      <p>The 
        <span>Intel&reg; C++ 
        </span> 
         compiler relies on environment variables for the location of compiler binaries, libraries, man pages, and license files. In some cases these are different from the environment variables that gcc* uses. Another difference is that these variables are not set by default after installing the 
        <span>Intel&reg; C++ 
        </span> compiler. The following environment variables need to be set prior to running the 
        <span>Intel&reg; C++ 
        </span> compiler: 
      </p>
 
      <ul type="disc" id="GUID-8910EA56-B059-483E-B4AA-C90C940A6933"> 
        <li> 
          <p><span>PATH</span> – add the location of the compiler binaries to 
            <span>PATH</span> 
          </p>
 
        </li>
 
        <li> 
          <p><span>LD_LIBRARY_PATH</span> (Linux* OS) – sets the location of the compiler libraries as well as the resulting binary generated by the compiler 
          </p>
 
        </li>
 
        <li> 
          </li>
 
        <li> 
          <p><span>MANPATH</span> – add the location of the compiler man pages (<span class="keyword">icc</span> and 
            <span class="keyword">icpc</span>) to 
            <span>MANPATH</span> 
          </p>
 
        </li>
 
        <li> 
          <p><span>INTEL_LICENSE_FILE</span> – sets the location of the Intel compiler license file 
          </p>
 
        </li>
 
      </ul>
 
      <p>You can '<samp class="codeph">source</samp>' the 
        <span class="filepath">iccvars.sh</span> shell script (included with the compiler) to set these environment variables for you. See 
        <a href="GUID-2738DAA6-469E-43BE-9CD6-F3C8E0A6B4C3.htm#GUID-2738DAA6-469E-43BE-9CD6-F3C8E0A6B4C3">Invoking the Compiler from the Command Line</a> for details on using 
        <span class="filepath">iccvars.sh</span>. 
      </p>
 
      <div class="Note"><h3 class="NoteTipHead">Note</h3> 
        <p>Setting these environment variables with 
          <span class="filepath">iccvars.sh</span> does not impose a conflict with gcc. You should be able to use both compilers in the same shell. 
        </p>
 
      </div> 
    </div>
 
    <div class="section" id="GUID-E885FD52-FF0C-4704-8534-C92F41951883"><h2 class="sectiontitle">Using Optimization</h2> 
       
      <p>The Intel&reg; C++ Compiler is an optimizing compiler that begins with the assumption that you want improved performance from your application when it is executed on Intel architecture. Consequently, certain optimizations, such as 
      <span class="option">-O2</span>, are part of the default invocation of the Intel&reg; compiler. By default, gcc turns off optimization - the equivalent of compiling with 
      <span class="option">-O</span> or 
      <span class="option">-O0</span>. Other forms of the 
      <span class="option">-O&lt;n&gt;</span> option compare as follows: 
      </p>
 
      
<div class="tablenoborder"><table cellpadding="4" summary="" id="GUID-EB16D922-66EA-45BB-90EA-DCAE3C62A15F" frame="border" border="1" cellspacing="0" rules="all"> 
           
           
           
          <thead align="left"> 
            <tr> 
              <th class="cellrowborder" align="left" valign="top" width="16%" id="d710237e187"> 
                <p>Option 
                </p>
 
              </th>
 
              <th class="cellrowborder" align="left" valign="top" width="42%" id="d710237e193"> 
                <p>Intel 
                </p>
 
              </th>
 
              <th class="cellrowborder" align="left" valign="top" width="42%" id="d710237e199"> 
                <p>gcc 
                </p>
 
              </th>
 
            </tr>
 
          </thead>
 
          <tbody> 
            <tr> 
              <td class="cellrowborder" valign="top" width="16%" headers="d710237e187 "> 
                <p><span class="option">-O0</span> 
                </p>
 
              </td>
 
              <td class="cellrowborder" valign="top" width="42%" headers="d710237e193 "> 
                <p>Turns off optimization. 
                </p>
 
              </td>
 
              <td class="cellrowborder" valign="top" width="42%" headers="d710237e199 "> 
                <p>Default. Turns off optimization. Same as 
                <span class="option">-O</span>. 
                </p>
 
              </td>
 
            </tr>
 
            <tr> 
              <td class="cellrowborder" valign="top" width="16%" headers="d710237e187 "> 
                <p><span class="option">-O1</span> 
                </p>
 
              </td>
 
              <td class="cellrowborder" valign="top" width="42%" headers="d710237e193 "> 
                <p>Decreases code size with some increase in speed. 
                </p>
 
              </td>
 
              <td class="cellrowborder" valign="top" width="42%" headers="d710237e199 "> 
                <p>Decreases code size with some increase in speed. 
                </p>
 
              </td>
 
            </tr>
 
            <tr> 
              <td class="cellrowborder" valign="top" width="16%" headers="d710237e187 "> 
                <p><span class="option">-O2</span> 
                </p>
 
              </td>
 
              <td class="cellrowborder" valign="top" width="42%" headers="d710237e193 "> 
                <p>Default. Favors speed optimization with some increase in code size. Same as 
                <span class="option">-O</span>. Intrinsics, loop unrolling, and inlining are performed. 
                </p>
 
              </td>
 
              <td class="cellrowborder" valign="top" width="42%" headers="d710237e199 "> 
                <p>Optimizes for speed as long as there is not an increase in code size. Loop unrolling and function inlining, for example, are not performed. 
                </p>
 
              </td>
 
            </tr>
 
            <tr> 
              <td class="cellrowborder" valign="top" width="16%" headers="d710237e187 "> 
                <p><span class="option">-O3</span> 
                </p>
 
              </td>
 
              <td class="cellrowborder" valign="top" width="42%" headers="d710237e193 "> 
                <p>Enables 
                <span class="option">-O2</span> optimizations plus more aggressive optimizations, such as prefetching, scalar replacement, and loop and memory access transformations. 
                </p>
 
              </td>
 
              <td class="cellrowborder" valign="top" width="42%" headers="d710237e199 "> 
                <p>Optimizes for speed while generating larger code size. Includes 
                <span class="option">-O2</span> optimizations plus loop unrolling and inlining. Similar to 
                <span class="option">-O2 -ip</span> on Intel compiler. 
                </p>
 
              </td>
 
            </tr>
 
          </tbody>
 
        </table>
</div>
 
    </div>
 
    <div class="section" id="GUID-C018F907-6522-4846-82C1-91D7358F9726"><h2 class="sectiontitle">Targeting Intel&reg; Processors</h2> 
       
      <p>While many of the same options that target specific processors are supported with both compilers, Intel includes options that utilize processor-specific instruction scheduling to target the latest Intel&reg; processors. If you compile your gcc application with the 
        <a href="GUID-F6DED8D3-769D-47AF-9C13-09A8DD4C8907.htm#GUID-F6DED8D3-769D-47AF-9C13-09A8DD4C8907"><span class="option">-march</span></a> or 
        <a href="GUID-B915C718-BAAD-4816-9DC3-2B13DE9C9033.htm#GUID-B915C718-BAAD-4816-9DC3-2B13DE9C9033"><span class="option">-mtune</span></a> option, consider using Intel's 
        <a href="GUID-09734487-1819-4C1E-B314-2497F2B64C45.htm#GUID-09734487-1819-4C1E-B314-2497F2B64C45"><span class="option">-x</span></a> or 
        <a href="GUID-2D881A91-C5D7-4DDD-84B1-FB9D0D597F4D.htm#GUID-2D881A91-C5D7-4DDD-84B1-FB9D0D597F4D"><span class="option">-ax</span></a> options for applications that run on IA-32 architecture or Intel&reg; 64 architecture. 
      </p>
 
    </div>
 
    <div class="section" id="GUID-5CC905A8-F1A8-4E37-8C8B-D215B7D9230A"><h2 class="sectiontitle">Modifying Your Configuration</h2> 
       
      <p>The Intel&reg; C++ compiler lets you maintain configuration and response files that are part of compilation. Options stored in the configuration file apply to every compilation, while options stored in response files apply only where they are added on the command line. If you have several options in your makefile that apply to every build, you may find it easier to move these options to the configuration file (<span class="filepath">../bin/icc.cfg</span> and 
        <span class="filepath">../bin/icpc.cfg</span>). 
      </p>
 
      <p>In a multi-user, networked environment, options listed in the 
        <span class="filepath">icc.cfg</span> and 
        <span class="filepath">icpc.cfg</span> files are generally intended for everyone who uses the compiler. If you need a separate configuration, you can use the 
        <span class="keyword">ICCCFG</span> or 
        <span class="keyword">ICPCCFG</span> environment variable to specify the name and location of your own 
        <span class="filepath">.cfg</span> file, such as 
        <span class="filepath">/my_code/my_config.cfg</span>. Anytime you instruct the compiler to use a different configuration file, the system configuration files (<span class="filepath">icc.cfg</span> and 
        <span class="filepath">icpc.cfg</span>) are ignored. 
      </p>
 
    </div>
 
    <div class="section" id="GUID-994DF3DE-5ACD-4E10-B0B0-7800E88E61B1"><h2 class="sectiontitle">Using the Intel&reg; Libraries</h2> 
       
      <p>The Intel&reg; C++ Compiler supplies additional libraries that contain optimized implementations of many commonly used functions. Some of these functions are implemented using CPU dispatch. This means that different code may be executed when run on different processors. 
      </p>
 
      <p>Supplied libraries include the Intel&reg; Math Library (libimf), the Short Vector Math Library (libsvml), libirc, as well as others. These libraries are linked in by default when the compiler sees that references to them have been generated. Some library functions, such as 
        <span class="keyword">sin</span> or 
        <span class="keyword">memset</span>, may not require a call to the library, since the compiler may inline the code for the function. 
      </p>
 
      <p><strong>Intel&reg; Math Library (libimf)</strong> 
      </p>
 
      <p>With the Intel&reg; C++ Compiler, the Intel&reg; Math Library, libimf, is linked by default when calling math functions that require the library. Some functions, such as sin, may not require a call to the library, since the compiler already knows how to compute the sin function. The Intel&reg; Math Library also includes some functions not found in the standard math library. 
      </p>
 
      <div class="Note"><h3 class="NoteTipHead">Note</h3> 
        <p>You cannot make calls the Intel&reg; Math Library with gcc*. 
        </p>
 
      </div> 
      <p>Many routines in this library are more highly optimized for Intel microprocessors than for non-Intel microprocessors. 
      </p>
 
      <p><strong>Short Vector Math Library (libsvml)</strong> 
      </p>
 
      <p>When vectorization is being done, the compiler may translate some calls to the libm math library functions into calls to libsvml functions. These functions implement the same basic operations as the Intel&reg; Math Library, but operate on short vectors of operands. This results in greater efficiency. In some cases, the libsvml functions are slightly less precise than the equivalent libimf functions. 
      </p>
 
      <p>Many routines in this library are more highly optimized for Intel microprocessors than for non-Intel microprocessors. 
      </p>
 
      <p><strong>libirc</strong> 
      </p>
 
      <p>libirc contains optimized implementations of some commonly used string and memory functions. For example, it contains functions that are optimized versions of 
        <span class="keyword">memcpy</span> and 
        <span class="keyword">memset</span>. The compiler will automatically generate calls to these functions when it sees calls to 
        <span class="keyword">memcpy</span> and 
        <span class="keyword">memset</span>. The compiler may also transform loops that are equivalent to 
        <span class="keyword">memcpy</span> or 
        <span class="keyword">memset</span> into calls to these functions. 
      </p>
 
      <p>Many routines in this library are more highly optimized for Intel microprocessors than for non-Intel microprocessors. 
      </p>
 
    </div>
 
    <p> 
	 
<div class="tablenoborder"><a name="d48e18"><!-- --></a><table cellpadding="4" summary="" id="d48e18" frame="border" border="1" cellspacing="0" rules="all"> 
		   
		  <thead align="left"> 
			 <tr> 
				<th class="cellrowborder" align="left" valign="top" width="100%" id="d710237e495"> 
				  <p id="d48e30"><a name="d48e30"><!-- --></a>Optimization Notice 
				  </p>
 
				</th>
 
			 </tr>
</thead>
 
		  <tbody> 
			 <tr> 
				<td class="bgcolor(#ccecff)" bgcolor="#ccecff" valign="top" width="100%" headers="d710237e495 "> 
				  <p>Intel's compilers may or may not optimize to the same degree for non-Intel microprocessors for optimizations that are not unique to Intel microprocessors. These optimizations include SSE2, SSE3, and SSSE3 instruction sets and other optimizations. Intel does not guarantee the availability, functionality, or effectiveness of any optimization on microprocessors not manufactured by Intel. Microprocessor-dependent optimizations in this product are intended for use with Intel microprocessors. Certain optimizations not specific to Intel microarchitecture are reserved for Intel microprocessors. Please refer to the applicable product User and Reference Guides for more information regarding the specific instruction sets covered by this notice. 
				  </p>
 
				  <p> Notice revision #20110804 
				  </p>
				  

				  </td>
 
			 </tr>
 
		  </tbody>
 
		</table>
</div>
 
	 </p>
 
  </div>
 
  
<div class="familylinks">
<div class="parentlink"><strong>Parent topic:</strong>&nbsp;<a href="GUID-54286E58-FE02-4F8D-B280-3BA2AADB2B4D.htm">Porting Applications</a></div>
</div>
<div class="See Also"><h2>See Also</h2>
<div class="linklist">
<div><a href="GUID-CDCCCACD-A61C-40C5-A342-E452C95E1608.htm#GUID-CDCCCACD-A61C-40C5-A342-E452C95E1608"><span class="option">-O</span> 
        </a>  compiler option 
        </div>
<div><a href="GUID-A9831327-FFAD-4573-BFCC-22EF81EB9DDA.htm#GUID-A9831327-FFAD-4573-BFCC-22EF81EB9DDA">Using Configuration Files 
        </a></div>
<div><a href="GUID-EA4DC01B-91A3-45B2-9F6B-57228F898362.htm#GUID-EA4DC01B-91A3-45B2-9F6B-57228F898362">Using Response Files 
        </a></div></div><br clear="all">
<div class="docfeedback">
<div><a href="http://www.intel.com/software/products/softwaredocs_feedback" target="_blank">Submit feedback on this help topic 
		  </a></div></div></div> 

</body>
</html>
